{"version":3,"sources":["styles.js","ImdCommons/ImdSlide.js","ImdCommons/SlideInicial.js","ImdCommons/SlideAgenda.js","data/arvoreMergeSort.js","Conteudo/edb2/aula-05/MergeSort.js","codes/merge_sort.js","formulas.js","ImdCommons/ImdCodePane.js","ImdCommons/Math.js","Conteudo/edb2/aula-05/MergeSortCode.js","Conteudo/edb2/aula-05/RelacoesDeRecorrencia.js","Conteudo/edb2/aula-05/SubstituicaoRepetida.js","img/analiseEmArvore1.png","img/analiseEmArvore2.png","img/analiseEmArvore3.png","Conteudo/edb2/aula-05/AnaliseEmArvore.js","Conteudo/edb2/aula-05/MergeSortAnaliseArvore.js","img/provaMetodoMestre.png","Conteudo/edb2/aula-05/MetodoMestre.js","Conteudo/edb2/aula-05/MetodoSubstituicao.js","Conteudo/edb2/aula-05/SlidesAula05EDB2.js","ImdCommons/ImdSlideDuvidas.js","Conteudo/edb2/aula-06/Algoritmos.js","ImdCommons/ImdComplexityTable.js","Conteudo/edb2/aula-06/ProblemaOrdenacao.js","Conteudo/edb2/aula-06/LimiteInferior.js","Conteudo/edb2/aula-06/SlidesAula06EDB2.js","ImdCommons/DiagramaDeClasse.js","Conteudo/lp2/aula-05/Heranca.js","Conteudo/lp2/aula-05/SlidesAula05LP2.js","ImdCommons/ImdLinkedList.js","ImdCommons/ImdVector.js","ImdCommons/HideByStep.js","Conteudo/edb2/aula-07/BuscaBinaria.js","Conteudo/edb2/aula-07/Arvores.js","data/arvoreBinaria.js","Conteudo/edb2/aula-07/SlidesAula07EDB2.js","codes/percursos_arvore_binaria.js","Conteudo/edb2/aula-08/SlidesAula08EDB2.js","Conteudo/edb2/aula-09-arvores-binarias/SlidesAula09EDB2.js","data/arvoreHeap.js","Conteudo/edb2/aula-10-lista-de-prioridades/SlidesAula10EDB2.js","Conteudo/edb2/aula-11-conjuntos-disjuntos/SlidesAula11EDB2.js","img/avl.PNG","img/avlSimplesDireita.PNG","img/avlDuplaDireita.PNG","img/avlSimplesEsquerda.PNG","img/avlDuplaEsquerda.PNG","Conteudo/edb2/aula-12-arvore-avl/SlidesAula12EDB2.js","data/arvoreRubroNegra.js","img/rnSimplesDireita.PNG","img/rnDuplaDireita.PNG","img/rnSimplesEsquerda.PNG","img/rnDuplaEsquerda.PNG","img/rnDefinicoes.PNG","img/rnDefinicoesCenario2.png","img/rnDefinicoesTriangulo.PNG","Conteudo/edb2/aula-14-arvore-b-e-digitais/SlidesAula14EDB2.js","Conteudo/edb2/aula-13-arvore-rubro-negra/SlidesAula13EDB2.js","App.js","reportWebVitals.js","index.js"],"names":["baseStyles","slideBox","display","flexDirection","height","alignItems","slideContentColumnBox","position","slideContentRowBox","justifyContent","formula","fontSize","bullets","listStyle","marginLeft","numbersOl","lowerRomanOl","hidden","visibility","root","flexGrow","topicoS1","topicoS2","topicoS3","themeBaseStyles","theme","props","emphasis","color","palette","secondary","main","fontWeight","danger","ok","useStyles","makeStyles","topico","marginBottom","ImdSlide","classes","backgroundColor","Box","className","spacing","heading","Grid","item","width","children","base","textAlign","codigoDisciplina","opacity","nomeDisciplina","semestre","lineHeight","assunto","texto","primary","SlideInicial","Typography","href","target","rel","notes","Topico","component","SlideAgenda","List","arvoreMergeSort","name","attributes","vetor","treeRoot","fontFamily","typography","vectorElementRect","fill","light","strokeWidth","stroke","vectorElementRectHighlight","vectorElementText","MergeSortExample","arvore","JSON","parse","stringify","elementSize","useSteps","step","stepPlaceholder","placeholder","highlight","highlightNode","start","parentNode","path","node","i","length","mergeSteps","vetorSorted","sort","a","b","highlightIndex","forEach","child","j","found","value","pos","indexOf","console","log","data","orientation","renderCustomNodeElement","param","appState","nodeDatum","size","map","element","x","y","dominantBaseline","textAnchor","separation","siblings","nonSiblings","translate","mergeSortRecorrencia","String","raw","shown","fade","ImdCodePane","linesToHighlight","undefined","highlightLines","split","interval","end","parseInt","push","class","style","atomDark","lineNumberStyle","minWidth","showLineNumbers","wrapLines","lineProps","line","includes","language","Math","Provider","MathJaxNode","displayType","texCode","tex","MergeSortCode","code","complexidade","RelacoesDeRecorrencia","MetodoIteracao","container","direction","justify","AnaliseEmArvore","AnaliseEmArvoreFormulas","src","analiseEmArvore1Img","alt","AnaliseEmArvoreFormulas2","analiseEmArvore2Img","AnaliseEmArvoreExercicio","analiseEmArvore3Img","MergeSortAnaliseEmArvore","MergeSortAnaliseEmArvore2","MetodoMestre","MetodoMestreCasos","MetodoMestreMergeSort","MetodoMestreArvore","provaMetodoMestre","margin","MetodoSubstituicao","SlidesAula05EDB2","useEffect","document","title","AlgoritmosSlide","alignContent","complexity","table","border","borderCollapse","header","borderBottom","padding","row","borderTop","ImdComplexityTable","labels","label","cases","caseItem","complexities","ProblemaOrdenacao","ProblemaOrdenacao2","LimiteInferior","ArvoreDecisao","tempNode","leavesFormula","zoom","ComplexidadeArvoreDecisao","AlgoritmoOtimo","innerRoot","nomeClasse","atributos","metodos","nodeText","highlightText","nodeCircle","highlightCircle","lines","strokeSize","ImdLinkedList","nodeSize","refContainer","useRef","d3","current","select","remove","svg","append","attr","startX","startY","center","g","text","ref","ImdVector","HideByStep","visibleIn","visible","ranges","Infinity","BuscaBinaria","source","relacoes","nodeHighlight","nodeFade","nodeEmpty","boldLink","ArvoresBuscaBinaria","formulaBalloon","options","formulaWithArrow","content","linkClass","buscaBinaria","raiz","balloon","subarvore","subarvore2","folhas","caminhos","grau","grauArvore","altura","nivel","estritamenteBinaria","binariaCompleta","arvoreBinariaSubarvoresVazias","arvoreBinariaSubarvoresVazias2","arvoreBinariaSubarvoresVazias3","arvoreZiguezague","withCode","pathClassFunc","empty","classname","styleText","styleCircle","r","ArvoresConceitos","ArvoresDefinicao","ArvoreBinariaDefinicao","arvoreBinaria","arvoreBinariaBusca","arvoreBinariaBuscaComFolha","arvoreBinariaBuscaZigueZague","arvoreBinariaBuscaDesbalanceada","arvoreEstritamenteBinaria","arvoreBinariaCompleta","SlidesAula07EDB2","buscaPreOrdem","buscaOrdemSimetrica","buscaPosOrdem","SlidesAula08EDB2","SlidesAula09EDB2","orderedVector","el","join","arvoreHeap","heapVector","heapVector1","heapVector2","heapVector3","SlidesAula10EDB2","SlidesAula11EDB2","SlidesAula12EDB2","arvoresAvl","avlSimplesDireita","avlDuplaDireita","avlSimplesEsquerda","avlDuplaEsquerda","nilNode","leaf","arvoreGraduada","arvoreRubroNegra","arvoreRubroNegraSemCor","SlidesAula14EDB2","SlidesAula13EDB2","rnDefinicoes","rnDefinicoesCenario2","rnDefinicoesTriangulo","rnSimplesDireita","rnDuplaDireita","rnSimplesEsquerda","rnDuplaEsquerda","spectacleTheme","colors","fonts","createMuiTheme","template","bottom","aulas1","SlidesAula06EDB2","aulas2","aulas3","App","ThemeProvider","ConfigProvider","packages","aula","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b507290f.chunk.js","sourcesContent":["export const baseStyles = {\r\n  slideBox: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    height: '100%',\r\n    alignItems: 'stretch'\r\n  },\r\n  slideContentColumnBox: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    position: 'relative',\r\n    alignItems: 'center'\r\n  },\r\n  slideContentRowBox: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    position: 'relative',\r\n    alignItems: 'center',\r\n    justifyContent: 'spaceBetween'\r\n  },\r\n  formula: {\r\n    fontSize: '4em'\r\n  },\r\n  bullets: {\r\n    fontSize: '2rem',\r\n    listStyle: 'inherit',\r\n    marginLeft: '2rem'\r\n  },\r\n  numbersOl: {\r\n    fontSize: '2rem',\r\n    listStyle: 'decimal',\r\n    marginLeft: '2rem'\r\n  },\r\n  lowerRomanOl: {\r\n    fontSize: '2rem',\r\n    listStyle: 'lower-roman',\r\n    marginLeft: '2rem'\r\n  },\r\n  hidden: {\r\n    visibility: 'hidden'\r\n  },\r\n  root: {\r\n    flexGrow: 1\r\n  },\r\n  topicoS1: {\r\n    fontSize: '1.3em'\r\n  },\r\n  topicoS2: {\r\n    fontSize: '2em'\r\n  },\r\n  topicoS3: {\r\n    fontSize: '3em'\r\n  }\r\n};\r\n\r\nexport const themeBaseStyles = (theme, props) => ({\r\n  ...baseStyles,\r\n  emphasis: {\r\n    color: theme.palette.secondary.main,\r\n    fontWeight: 'bold'\r\n  },\r\n  danger: {\r\n    color: 'red',\r\n    fontWeight: 'bold'\r\n  },\r\n  ok: {\r\n    color: 'green',\r\n    fontWeight: 'bold'\r\n  }\r\n});","import { Box, Grid, makeStyles } from \"@material-ui/core\";\r\nimport { Slide, Heading } from \"spectacle\";\r\nimport { baseStyles } from \"../styles\";\r\n\r\nconst useStyles = makeStyles((theme, props) => ({\r\n  ...baseStyles,\r\n  topico: {\r\n    fontSize: '3em',\r\n    marginBottom: '1em'\r\n  }\r\n}));\r\n\r\nexport default function ImdSlide(props) {\r\n  const classes = useStyles(props);\r\n  return (\r\n    <Slide backgroundColor=\"backgroundColor\">\r\n      <Box display=\"flex\"\r\n          className={classes.root}\r\n          flexDirection=\"column\"\r\n          alignItems=\"center\"\r\n          spacing={3}>\r\n        {props.heading && <Grid item><Heading>{props.heading}</Heading></Grid>}\r\n        <Box display=\"flex\" flexGrow={1} width=\"100%\">\r\n          {props.children}\r\n        </Box>\r\n      </Box>\r\n    </Slide>\r\n  );\r\n}","import { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { Heading, Notes } from \"spectacle\";\r\nimport { themeBaseStyles } from \"../styles\";\r\nimport ImdSlide from \"./ImdSlide\";\r\n\r\nconst useStyles = makeStyles((theme, props) => {\r\n  const base = themeBaseStyles(theme, props);\r\n  return {\r\n    ...base,\r\n    root: {\r\n      ...base.root,\r\n      textAlign: 'center'\r\n    },\r\n    codigoDisciplina: {\r\n      color: theme.palette.secondary.main,\r\n      fontSize: '6rem',\r\n      fontWeight: 'bold',\r\n      opacity: 0.5,\r\n    },\r\n    nomeDisciplina: {\r\n      fontSize: '5rem'\r\n    },\r\n    semestre: {\r\n      color: theme.palette.secondary.main,\r\n      fontSize: '2.5rem',\r\n      lineHeight: '5rem'\r\n    },\r\n    assunto: {\r\n      color: theme.palette.secondary.main,\r\n      fontSize: '3rem',\r\n      fontWeight: 'bold',\r\n      lineHeight: '5rem'\r\n    },\r\n    texto: {\r\n      color: theme.palette.primary.main,\r\n      fontSize: '2.5rem',\r\n      lineHeight: '4rem'\r\n    }\r\n  };\r\n});\r\n\r\nexport default function SlideInicial(props) {\r\n  const classes = useStyles(props);\r\n\r\n  return (\r\n    <ImdSlide>\r\n      <Box className={classes.root} flexDirection=\"column\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-evenly\">\r\n        <Typography className={classes.codigoDisciplina}>{props.codigoDisciplina}</Typography>\r\n        <Heading className={classes.nomeDisciplina}>{props.nomeDisciplina}</Heading>\r\n        <Typography className={classes.assunto}>{props.assunto}</Typography>\r\n        <Typography className={classes.texto}>UFRN - Universidade Federal do Rio Grande do Norte</Typography>\r\n        <Typography className={classes.texto}>IMD - Instituto Metrópole Digital</Typography>\r\n        <Typography className={classes.texto}>Professor Vinicius Mendes &lt;<a href=\"mailto:vinicius.mendes@imd.ufrn.br\" target=\"_blank\" rel=\"noreferrer\">mailto:vinicius.mendes@imd.ufrn.br</a>&gt;</Typography>\r\n        <Typography className={classes.semestre}>{props.semestre}</Typography>\r\n      </Box>\r\n      <Notes>\r\n        {props.notes ? props.notes : 'Nenhuma nota cadastrada'}\r\n      </Notes>\r\n    </ImdSlide>\r\n  );\r\n}\r\n","import { List, makeStyles } from \"@material-ui/core\";\r\nimport { Box, Heading, ListItem } from \"spectacle\";\r\nimport { baseStyles } from \"../styles\";\r\nimport ImdSlide from \"./ImdSlide\";\r\n\r\nconst useStyles = makeStyles((theme, props) => ({\r\n  ...baseStyles,\r\n}));\r\n\r\nexport function Topico(props) {\r\n  return (<ListItem component=\"li\" className={props.className}>{props.children}</ListItem>);\r\n}\r\n\r\nexport default function SlideAgenda(props) {\r\n  const classes = useStyles(props);\r\n\r\n  return (  \r\n      <ImdSlide>\r\n        <Box className={classes.slideBox}>\r\n          <Heading>Agenda</Heading>\r\n          <Box className={classes.slideContentColumnBox}>\r\n            <List component=\"ul\" className={classes.numbersOl}>\r\n              { props.children }\r\n            </List>\r\n          </Box>\r\n        </Box>\r\n      </ImdSlide>);\r\n}","export const arvoreMergeSort = {\r\n  name: 'vetor',\r\n  attributes: { vetor: [11, 7, 5, 9, 4, 10, 8, 6] },\r\n  children: [\r\n    {\r\n      name: 'vetor[0:4]',\r\n      attributes: { vetor: [11, 7, 5, 9] },\r\n      children: [\r\n        {\r\n          name: 'vetor[0:2]',\r\n          attributes: { vetor: [11, 7] },\r\n        },{\r\n          name: 'vetor[2:4]',\r\n          attributes: { vetor: [5, 9] },\r\n        }\r\n      ]\r\n    },{\r\n      name: 'vetor[4:8]',\r\n      attributes: { vetor: [4, 10, 8, 6] },\r\n      children: [\r\n        {\r\n          name: 'vetor[4:6]',\r\n          attributes: { vetor: [4, 10] },\r\n        },{\r\n          name: 'vetor[6:8]',\r\n          attributes: { vetor: [8, 6] },\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}","import { Box, makeStyles } from \"@material-ui/core\";\r\nimport Tree from 'react-d3-tree';\r\nimport { useSteps } from \"spectacle/es/hooks/use-steps\";\r\nimport { arvoreMergeSort } from \"../../../data/arvoreMergeSort\";\r\nimport { baseStyles } from \"../../../styles\";\r\n\r\nconst useStyles = makeStyles((theme, props) => ({\r\n  ...baseStyles,\r\n  treeRoot: {\r\n    fontFamily: theme.typography.fontFamily,\r\n    width: '100%', \r\n    flexGrow: 1\r\n  },\r\n  vectorElementRect: {\r\n    fill: theme.palette.secondary.light,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    strokeWidth:1, \r\n    stroke: 'white'\r\n  },\r\n  vectorElementRectHighlight: {\r\n    fill: theme.palette.secondary.main,\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    strokeWidth:1, \r\n    stroke: 'white'\r\n  },\r\n  vectorElementText: {\r\n    stroke: 'white',\r\n    fontWeight: 100,\r\n    fontSize: '1.5em'\r\n  }\r\n}));\r\n\r\nexport default function MergeSortExample(props) {\r\n  const classes = useStyles(props);\r\n  const arvore = JSON.parse(JSON.stringify(arvoreMergeSort));\r\n  let elementSize = 60;\r\n  let separation = 2;\r\n\r\n  const {step, placeholder: stepPlaceholder} = useSteps(29, {});\r\n  if (step < 0) {\r\n    arvore.attributes.highlight = true;\r\n    arvore.children = [];\r\n    elementSize = 100;\r\n  }\r\n  const highlightNode = function (step, start, parentNode, path) {\r\n    if (step === start) {\r\n      let node = parentNode;\r\n      for (let i=0; i<path.length;i++) {\r\n        if (node.children) {\r\n          node = node.children[path[i]];\r\n        }\r\n      }\r\n      node.attributes.highlight = true;\r\n    }\r\n  }\r\n  highlightNode(step, 0, arvore, [0]);\r\n  highlightNode(step, 1, arvore, [0,0]);\r\n  highlightNode(step, 2, arvore, [0,0]);\r\n  highlightNode(step, 3, arvore, [0,1]);\r\n  \r\n  highlightNode(step, 9, arvore, [1]);\r\n  highlightNode(step, 10, arvore, [1,0]);\r\n  highlightNode(step, 11, arvore, [1,1]);\r\n  highlightNode(step, 12, arvore, [1,1]);\r\n  if (step === 0) {\r\n    arvore.children[0].children = [];\r\n  }\r\n  if (step >= 2) {\r\n    arvore.children[0].children[0].attributes.vetor = [7, 11];\r\n  }\r\n  if (step >= 12) {\r\n    arvore.children[1].children[1].attributes.vetor = [6, 8];\r\n  }\r\n  const mergeSteps = function(step, start, parentNode) {\r\n    if (step >= start) {\r\n      let length = parentNode.attributes.vetor.length;\r\n      let vetorSorted = [...parentNode.attributes.vetor].sort((a,b) => a-b);\r\n      if (step === start) {\r\n        parentNode.attributes.highlightIndex = 0;\r\n        parentNode.children[0].attributes.highlightIndex = 0;\r\n        parentNode.children[1].attributes.highlightIndex = 0;\r\n      }\r\n      for (let i=0; i < length; i++) {\r\n        if (step >= start + 1 + i) {\r\n          parentNode.attributes.vetor[i] = vetorSorted[i];\r\n        }\r\n        if (step === start + 1 + i) {\r\n          parentNode.attributes.highlightIndex = i+1;\r\n          parentNode.children.forEach(child => {\r\n            let j = i, found = false;\r\n            while (j >= 0 && !found) {\r\n              let value = parentNode.attributes.vetor[j],\r\n                  pos = child.attributes.vetor.indexOf(value);\r\n              console.log(value, i,j,pos);\r\n              if(pos >= 0) {\r\n                child.attributes.highlightIndex = pos+1;\r\n                found = true;\r\n              }\r\n              j--;\r\n            }\r\n            if (!found) {\r\n              child.attributes.highlightIndex = 0;\r\n            }\r\n          });\r\n        }\r\n      }\r\n      if (step === start + length) {\r\n        parentNode.attributes.highlight = true;\r\n      }\r\n    }\r\n  }\r\n  if (step >= 0 && step < 10) {\r\n    arvore.children[1].children = [];\r\n  }\r\n  mergeSteps(step, 4, arvore.children[0]);\r\n  mergeSteps(step, 13, arvore.children[1]);\r\n  mergeSteps(step, 18, arvore);\r\n  \r\n  if (step === 27) {\r\n    arvore.attributes.highlight = true;\r\n    arvore.children = [];\r\n    elementSize = 100;\r\n  }\r\n\r\n  return (\r\n    <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"column\"\r\n        alignItems=\"stretch\"\r\n        justifyContent=\"space-evenly\">\r\n      <Box className={classes.treeRoot}>\r\n          {stepPlaceholder}\r\n          <Tree data={arvore}\r\n            orientation=\"vertical\"\r\n            renderCustomNodeElement={(param, appState) => {\r\n              let vetor = param.nodeDatum.attributes.vetor;\r\n              const highlight = param.nodeDatum.attributes.highlight;\r\n              const highlightIndex = param.nodeDatum.attributes.highlightIndex;\r\n              let size = elementSize;\r\n              let start = -size*vetor.length/2;\r\n              \r\n              return (\r\n                <>\r\n                  {vetor.map((element, i) => (\r\n                    <svg x={start + i * size} y={-size/2} width={size} height={size}>\r\n                      <rect className={highlight || highlightIndex === i ? classes.vectorElementRectHighlight : classes.vectorElementRect}></rect>\r\n                      <text x=\"50%\" y=\"50%\" dominantBaseline=\"middle\" textAnchor=\"middle\" className={classes.vectorElementText}>{element}</text>\r\n                    </svg>\r\n                  ))}\r\n                </>\r\n              )}}\r\n            separation={{siblings: separation, nonSiblings: separation}}\r\n            translate={{ y: 100, x: 650}}\r\n          />\r\n      </Box>\r\n    </Box>);\r\n}\r\n","export const mergeSortCode = \r\n`public int mergeSort(Integer[] v, int ini, int fim) {\r\n  int meio;\r\n  if (ini < fim) {\r\n    meio = Math.floor((ini + fim)/2.0);\r\n    mergeSort(v, ini, meio);\r\n    mergeSort(v, meio, fim);\r\n    merge(v, ini, meio, fim);\r\n  }\r\n}`;\r\nexport const mergeCode = \r\n`public void merge(Integer[] v, int ini, int meio, int fim) {\r\n  Integer[] saida = new Integer[fim - ini];\r\n  int i1 = ini;\r\n  int i2 = meio;\r\n  for (int i=0; i<saida.length; i++) {\r\n    if (i1 < meio && (i2 >= saida.length || v[i1] < v[i2])) {\r\n      saida[i] = v[i1];\r\n      i1++;\r\n    } else  {\r\n      saida[i] = v[i2]\r\n      i2++;\r\n    }\r\n  }\r\n  for (int i = 0; i<saida.length; i++) {\r\n    v[i] = saida[i];\r\n  }\r\n}`;","\r\nexport const mergeSortRecorrencia = String.raw`T(n) = \\begin{cases}\r\n1 & \\text{para $n = 1$}\\\\\r\n2T(n/2) + n & \\text{para $n > 1$}\r\n\\end{cases}`;","import { makeStyles } from '@material-ui/core';\r\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\r\nimport atomDark from 'react-syntax-highlighter/dist/cjs/styles/prism/atom-dark';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  shown: {\r\n    fontFamily: \"'PT Mono', Inconsolata, Monaco, Consolas, 'Courier New', Courier, monospace\",\r\n    opacity: 1\r\n  },\r\n  fade: {\r\n    fontFamily: \"'PT Mono', Inconsolata, Monaco, Consolas, 'Courier New', Courier, monospace\",\r\n    opacity: 0.4\r\n  }\r\n});\r\n\r\n\r\nexport default function ImdCodePane(props) {\r\n  const classes = useStyles(props);\r\n  const linesToHighlight = [];\r\n  if (props.highlightLines !== undefined) {\r\n    const intervals = String(props.highlightLines).split(',');\r\n    \r\n    intervals.forEach(interval => {\r\n      let [start, end] = interval.split('-');\r\n      start = parseInt(start, 10);\r\n      end = end !== undefined ? parseInt(end, 10) : start;\r\n      for (let i = start; i <= end; i++) {\r\n        linesToHighlight.push(i);\r\n      }\r\n    });\r\n  }\r\n  return (\r\n    <div class=\"imd-codepane\">\r\n      <SyntaxHighlighter\r\n          style={atomDark}\r\n          lineNumberStyle={{minWidth: '1.25em'}}\r\n          showLineNumbers\r\n          wrapLines\r\n          lineProps={line => linesToHighlight.length === 0 || linesToHighlight.includes(line) ? {class: classes.shown} : {class: classes.fade}}\r\n          language={props.language}>{props.children}</SyntaxHighlighter>\r\n    </div>\r\n  );  \r\n}","import MathJax from \"@innodoc/react-mathjax-node\";\r\n\r\nexport default function Math(props) {\r\n  return (\r\n    <MathJax.Provider>\r\n      <div class=\"imd-math\"><MathJax.MathJaxNode displayType=\"inline\" texCode={props.tex}/></div>\r\n    </MathJax.Provider>\r\n  );\r\n}","import { Box, makeStyles } from \"@material-ui/core\";\r\nimport { useSteps } from \"spectacle/es/hooks/use-steps\";\r\nimport { mergeCode, mergeSortCode } from \"../../../codes/merge_sort\";\r\nimport { mergeSortRecorrencia } from \"../../../formulas\";\r\nimport ImdCodePane from \"../../../ImdCommons/ImdCodePane\";\r\nimport Math from \"../../../ImdCommons/Math\";\r\nimport { baseStyles } from \"../../../styles\";\r\n\r\nconst useStyles = makeStyles((theme, props) => ({\r\n  ...baseStyles,\r\n  emphasis: {\r\n    color: theme.palette.emphasis.main\r\n  }\r\n}));\r\n\r\nexport default function MergeSortCode(props) {\r\n  const classes = useStyles(props);\r\n  const {step, placeholder: stepPlaceholder} = useSteps(3, {});\r\n  const code = step < 1 ? mergeCode : mergeSortCode;\r\n  const complexidade = step < 1 ? <Math tex={String.raw`\\Theta(n)`}/> : <span className={classes.emphasis} style={{fontSize:'0.4em'}}><Math tex={mergeSortRecorrencia}/></span>; \r\n  return (\r\n    <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"colun\"\r\n        justifyContent=\"space-evenly\"\r\n        alignItems=\"center\"\r\n        spacing={3}>\r\n      {stepPlaceholder}\r\n      <Box style={{fontSize: '1.2em'}}>\r\n        <ImdCodePane language=\"java\">\r\n          {code}\r\n        </ImdCodePane>\r\n      </Box>\r\n      <Box style={{fontSize: '1.2em'}}>\r\n        {(step === 0 || step === 2) && <p className={classes.formula} style={{textAlign: 'center'}}>{complexidade}</p>}\r\n      </Box>\r\n    </Box>);\r\n}\r\n","import { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport Math from \"../../../ImdCommons/Math\";\r\nimport { baseStyles } from \"../../../styles\";\r\n\r\nconst useStyles = makeStyles((theme, props) => ({\r\n  ...baseStyles,\r\n  emphasis: {\r\n    color: theme.palette.emphasis.main\r\n  },\r\n  formula: {\r\n    fontSize: '2em',\r\n  }\r\n}));\r\n\r\nexport default function RelacoesDeRecorrencia(props) {  \r\n  const classes = useStyles(props);\r\n  return (\r\n    <>\r\n      <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-evenly\">\r\n        <Box className={classes.formula}>\r\n          <Math tex={String.raw`f(n) = \\begin{cases}\r\n                  n & \\text{para $n = 0$ ou $n = 1$}\\\\\r\n                  f(n-1) + f(n-2) & \\text{para $n > 1$}\r\n                \\end{cases}`}/>\r\n        </Box>\r\n        <Box className={classes.formula}>\r\n          <Typography style={{fontSize:'2em'}}>Funções que referenciam a si mesmas.</Typography>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}","import { Grid, makeStyles, Typography } from \"@material-ui/core\";\r\nimport Math from \"../../../ImdCommons/Math\";\r\nimport { baseStyles } from \"../../../styles\";\r\n\r\nconst useStyles = makeStyles((theme, props) => ({\r\n  ...baseStyles,\r\n  emphasis: {\r\n    color: theme.palette.emphasis.main\r\n  },\r\n  formula: {\r\n    fontSize: '1.8em',\r\n  }\r\n}));\r\n\r\nexport default function MetodoIteracao(props) {  \r\n  const classes = useStyles(props);\r\n  return (\r\n    <>\r\n      <Grid container\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"space-evenly\"\r\n        spacing={3}>\r\n        <Grid item className={classes.formula}>\r\n          <Typography style={{fontSize:'1.3em'}}><Math tex={String.raw`T(n)`}/> é o tempo para processar um problema de tamanho n.</Typography>\r\n        </Grid>\r\n        <Grid item flexGrow={1}>\r\n          <Grid container\r\n              direction=\"row\"\r\n              alignItems=\"center\"\r\n              justify=\"space-evenly\"\r\n              spacing={3}>\r\n            <Grid item className={classes.formula}>\r\n              <Math tex={String.raw`T(n) = \\begin{cases}\r\n                    1 & \\text{para $n = 1$}\\\\\r\n                    T(n/2) + 1 & \\text{para $n > 1$}\r\n                    \\end{cases}\\implies`}/>\r\n            </Grid>\r\n            <Grid item className={classes.formula}>\r\n              <Math tex={String.raw`\\begin{split}\r\n                      T(n) & = 1 + T(n/2) \\\\\r\n                          & = 1 + 1 + T(n/2^2)  \\\\\r\n                          & = 1 + 1 + 1 + T(n/2^3) \\\\\r\n                          & = 1 + 1 + 1 + 1 + T(n/2^4) \\\\\r\n                          & = ... \\\\\r\n                          & = l + T(n/2^l) \\\\\r\n                          & = \\log_2{n} + 1 \\in \\Theta(\\log{n})\r\n                    \\end{split}`}/>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/analiseEmArvore1.05410751.png\";","export default __webpack_public_path__ + \"static/media/analiseEmArvore2.89f6a8f4.png\";","export default __webpack_public_path__ + \"static/media/analiseEmArvore3.4a140da8.png\";","import { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { themeBaseStyles } from \"../../../styles\";\r\nimport analiseEmArvore1Img from \"../../../img/analiseEmArvore1.png\";\r\nimport analiseEmArvore2Img from \"../../../img/analiseEmArvore2.png\";\r\nimport analiseEmArvore3Img from \"../../../img/analiseEmArvore3.png\";\r\nimport Math from \"../../../ImdCommons/Math\";\r\nimport { useSteps } from \"spectacle/es/hooks/use-steps\";\r\n\r\nconst useStyles = makeStyles((theme, props) => ({\r\n  ...themeBaseStyles(theme, props),\r\n  topico: {\r\n    fontSize: '3em',\r\n    marginBottom: '1em'\r\n  }\r\n}));\r\n\r\nexport default function AnaliseEmArvore(props) {  \r\n  const classes = useStyles(props);\r\n  return (\r\n    <>\r\n      <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-evenly\">\r\n        <Typography className={classes.topico}>Representa em uma <span className={classes.emphasis}>árvore</span> o desenvolvimento da <span className={classes.emphasis}>recorrência</span>.</Typography>\r\n        <Typography className={classes.topico}>Cada <span className={classes.emphasis}>nó</span> representa um <span className={classes.emphasis}>subproblema</span>.</Typography>\r\n        <Typography className={classes.topico}>O <span className={classes.emphasis}>custo total</span> é a soma dos custos de cada nó.</Typography>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport function AnaliseEmArvoreFormulas(props) {  \r\n  const classes = useStyles(props);\r\n  return (\r\n    <>\r\n      <Box display=\"flex\"\r\n          className={classes.root}\r\n          flexDirection=\"column\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-evenly\">\r\n        <Box className={classes.formula} style={{fontSize: \"2em\"}}>\r\n          <Math tex={String.raw`T(n) = \\begin{cases}\r\n                  c & \\text{para $n = 1$}\\\\\r\n                  2T(n/2) + cn & \\text{para $n > 1$}\r\n                \\end{cases}`}/>\r\n        </Box>\r\n        <Box width=\"50%\">\r\n          <img src={analiseEmArvore1Img} alt=\"Representação da análise em árvore.\" width=\"100%\" />\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nexport function AnaliseEmArvoreFormulas2(props) {  \r\n  const classes = useStyles(props);\r\n  return (\r\n    <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"row\"\r\n        alignItems=\"stretch\"\r\n        justifyContent=\"space-evenly\">\r\n      <Box width=\"50%\">\r\n        <img src={analiseEmArvore2Img} alt=\"Representação da análise em árvore.\" width=\"100%\" />\r\n      </Box>\r\n      <Box display=\"flex\"\r\n          flexDirection=\"column\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-evenly\">\r\n        <Box style={{fontSize: '2em'}}><Math tex={String.raw`\\log_a{b} = x \\iff a^x = b`}/></Box>\r\n        <Box style={{fontSize: '2em'}}><Math tex={String.raw`\\log_2{n} = h \\iff 2^{h} = n`}/></Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport function AnaliseEmArvoreExercicio(props) {  \r\n  const classes = useStyles(props);\r\n  const {step, placeholder: stepPlaceholder} = useSteps(1, {});\r\n  return (\r\n    <>\r\n      {stepPlaceholder}\r\n      <Box display=\"flex\"\r\n          className={classes.root}\r\n          flexDirection=\"row\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-evenly\">\r\n        { step < 0 &&\r\n          <Box className={classes.formula} style={{fontSize: \"2em\"}}>\r\n            <Typography style={{fontSize: '1em'}}>Verifique qual o limite superior O para <Math tex={String.raw`T(n) = T(n/3) + T(2n/3) + c \\cdot n`}/>.</Typography>\r\n          </Box>\r\n        }\r\n        {step >= 0 &&\r\n          <>\r\n            <Box className={classes.formula} style={{fontSize: \"2em\"}}>\r\n              <Typography style={{fontSize: '1em'}}><Math tex={String.raw`T(n) = T(n/3) + T(2n/3) + c \\cdot n`}/></Typography>\r\n            </Box>\r\n            <Box width=\"50%\">\r\n              <img src={analiseEmArvore3Img} alt=\"Representação da análise em árvore.\" width=\"100%\" />\r\n            </Box>\r\n          </>\r\n        }\r\n      </Box>\r\n    </>\r\n  );\r\n}","import { Box, makeStyles } from \"@material-ui/core\";\r\nimport { themeBaseStyles } from \"../../../styles\";\r\nimport analiseEmArvore1Img from \"../../../img/analiseEmArvore1.png\";\r\nimport analiseEmArvore2Img from \"../../../img/analiseEmArvore2.png\";\r\nimport Math from \"../../../ImdCommons/Math\";\r\nimport { mergeSortRecorrencia } from \"../../../formulas\";\r\n\r\nconst useStyles = makeStyles((theme, props) => ({\r\n  ...themeBaseStyles(theme, props),\r\n  topico: {\r\n    fontSize: '3em',\r\n    marginBottom: '1em'\r\n  }\r\n}));\r\n\r\n\r\nexport default function MergeSortAnaliseEmArvore(props) {  \r\n  const classes = useStyles(props);\r\n  return (\r\n    <>\r\n      <Box display=\"flex\"\r\n          className={classes.root}\r\n          flexDirection=\"column\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-evenly\">\r\n        <Box className={classes.formula} style={{fontSize: \"2em\"}}>\r\n          <Math tex={mergeSortRecorrencia}/><span className={classes.danger}><Math tex={String.raw`\\implies c=1`}/></span>\r\n        </Box>\r\n        <Box width=\"50%\">\r\n          <img src={analiseEmArvore1Img} alt=\"Representação da análise em árvore.\" width=\"100%\" />\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport function MergeSortAnaliseEmArvore2(props) {  \r\n  const classes = useStyles(props);\r\n  return (\r\n    <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-evenly\">\r\n      <Box width=\"50%\">\r\n        <img src={analiseEmArvore2Img} alt=\"Representação da análise em árvore.\" width=\"100%\" />\r\n      </Box>\r\n      <Box className={classes.formula} style={{fontSize: \"2em\"}}>\r\n        <Math tex={String.raw`\\begin{split}\r\n            Total & = c \\cdot n \\cdot \\log_2{n} + c \\cdot n, c = 1 \\\\\r\n            & = n \\cdot \\log_2{n} + n \\\\\r\n            & \\in \\Theta(n \\cdot \\log{n})\r\n          \\end{split}`}/>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}","export default __webpack_public_path__ + \"static/media/provaMetodoMestre.58fbc3b6.png\";","import { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport Math from \"../../../ImdCommons/Math\";\r\nimport { themeBaseStyles } from \"../../../styles\";\r\nimport provaMetodoMestre from \"../../../img/provaMetodoMestre.png\";\r\nimport {mergeSortRecorrencia} from \"../../../formulas\"; \r\nimport { useSteps } from \"spectacle/es/hooks/use-steps\";\r\n\r\nconst useStyles = makeStyles((theme, props) => ({\r\n  ...themeBaseStyles(theme, props),\r\n  topico: {\r\n    fontSize: '2em',\r\n    textAlign: 'center'\r\n  }\r\n}));\r\n\r\nexport default function MetodoMestre(props) {  \r\n  const classes = useStyles(props);\r\n  return (\r\n    <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-evenly\">\r\n      <Typography className={classes.topico}>Possibilita resolver recorrências da forma <Math tex={String.raw`T(n) = a \\cdot T(n/b) + f(n)`}/>.</Typography>\r\n      <Typography className={classes.topico}><span className={classes.emphasis}><Math tex={String.raw`a \\geqslant 1`}/></span>, <span className={classes.emphasis}><Math tex={String.raw`b > 1`}/></span> e <span className={classes.emphasis}><Math tex={String.raw`f`}/></span> assintoticamente positiva.</Typography>\r\n      <Typography className={classes.topico}><span className={classes.emphasis}><Math tex={String.raw`f(n)`}/></span> é o tempo para dividir o problema e combinar seus resultados.</Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\n\r\nexport function MetodoMestreCasos(props) {  \r\n  const classes = useStyles(props);\r\n  return (\r\n    <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-evenly\">\r\n      <Typography className={classes.topico}><strong>Caso 1: </strong>Se <span className={classes.emphasis}><Math tex={String.raw`f(n) = O(n^{\\log_b{a-\\varepsilon}})`}/></span> para <Math tex={String.raw`\\varepsilon > 0`}/>, então <span className={classes.emphasis}><Math tex={String.raw`T(n) = \\Theta(n^{\\log_b{a}})`}/></span>.</Typography>\r\n      <Typography className={classes.topico}><strong>Caso 2: </strong>Se <span className={classes.emphasis}><Math tex={String.raw`f(n) = \\Theta(n^{\\log_b{a}})`}/></span> então <span className={classes.emphasis}><Math tex={String.raw`T(n) = \\Theta(n^{\\log_b{a}} \\cdot \\log{n})`}/></span>.</Typography>\r\n      <Typography className={classes.topico}><strong>Caso 3: </strong>Se <span className={classes.emphasis}><Math tex={String.raw`f(n) = \\Omega(n^{\\log_b{a+\\varepsilon}})`}/></span> para <Math tex={String.raw`\\varepsilon > 0`}/> e se <Math tex={String.raw`a \\cdot f(n/b) \\leqslant c \\cdot f(n)`}/> para <Math tex={String.raw`c < 1`}/> para n suficientemente grande, então <span className={classes.emphasis}><Math tex={String.raw`T(n) = \\Theta(f(n))`}/></span>.</Typography>\r\n    </Box>\r\n  );\r\n}\r\n\r\n\r\nexport function MetodoMestreMergeSort(props) {  \r\n  const {step, placeholder: stepPlaceholder} = useSteps(7, {});\r\n  const classes = useStyles(props);\r\n  return (\r\n    <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-evenly\">\r\n      {stepPlaceholder}\r\n      <Typography className={classes.topico}><Math tex={mergeSortRecorrencia}/></Typography>\r\n      { step >= 0 && <Typography className={classes.topico}>É da forma <Math tex={String.raw`T(n) = a \\cdot T(n/b) + f(n)`}/>? Quais os valores de <Math tex={String.raw`a`}/>, <Math tex={String.raw`b`}/> e <Math tex={String.raw`f(n)`}/>?</Typography> }\r\n      { step >= 1 && <Typography className={classes.topico}><Math tex={String.raw`a = 2, b = 2, f(n) = n`}/>.</Typography> }\r\n      { step >= 2 && <Typography className={classes.topico}><strong>Caso 1: </strong><Math tex={String.raw`f(n) = O(n^{\\log_2{2-\\varepsilon}})`}/>? { step >= 3 && <span class={classes.danger}>Não</span> }</Typography> }\r\n      { step >= 4 && <Typography className={classes.topico}><strong>Caso 2: </strong><Math tex={String.raw`f(n) = \\Theta(n^{\\log_2{2}})`}/>? { step >= 5 && <span class={classes.ok}>Sim</span> }</Typography> }\r\n      { step >= 6 && <Typography className={classes.topico}>Então <Math tex={String.raw`T(n) \\in \\Theta(n^{\\log_2{2}} \\cdot \\log{n} ) = \\Theta(n \\cdot \\log{n})`}/></Typography> }\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport function MetodoMestreArvore(props) {  \r\n  const classes = useStyles(props);\r\n  return (\r\n    <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"row\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-evenly\">\r\n      <Box width=\"70%\">\r\n        <img src={provaMetodoMestre} alt=\"Representação da análise em árvore.\" width=\"100%\" />\r\n      </Box>\r\n      <Box display=\"flex\"\r\n          style={{height: '100%'}}\r\n          flexDirection=\"column\"\r\n          alignItems=\"start\"\r\n          justifyContent=\"center\">\r\n        <Box style={{fontSize: '1.5em', margin: '1em'}}>Cada nó se divide em outros <span className={classes.emphasis}><Math tex={String.raw`a`}/></span> nós</Box>\r\n        <Box style={{fontSize: '1.5em', margin: '1em'}}><span className={classes.emphasis}><Math tex={String.raw`\\log_b{n}`}/></span> níveis</Box>\r\n        <Box style={{fontSize: '1.5em', margin: '1em'}}><span className={classes.emphasis}><Math tex={String.raw`a^{\\log_b{n}} = n^{\\log_b{a}}`}/></span> folhas</Box>\r\n        <Box style={{fontSize: '1.5em', margin: '1em'}}>Se dividirmos a raiz, o meio da árvore e as folhas, temos:</Box>\r\n        <Box style={{fontSize: '1.5em', margin: '1em'}}><span className={classes.emphasis}><Math tex={String.raw`\\Theta(n^{\\log_b{a}}) + \\sum_{j=1}^{\\log_b{n-1}} a^j \\cdot f(n/b^j) + f(n)`}/></span></Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n/*\r\n4.3-1\r\nUse the master method to give tight asymptotic bounds for the following recurrences.\r\na. T (n) = 4T (n/2) + n.\r\nb. T (n) = 4T (n/2) + n2.\r\nc. T (n) = 4T (n/2) + n3.*/","import { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport Math from \"../../../ImdCommons/Math\";\r\nimport { themeBaseStyles } from \"../../../styles\";\r\n\r\nconst useStyles = makeStyles((theme, props) => ({\r\n  ...themeBaseStyles(theme, props),\r\n  topico: {\r\n    fontSize: '2em',\r\n    textAlign: 'center'\r\n  }\r\n}));\r\n\r\nexport default function MetodoSubstituicao(props) {  \r\n  const classes = useStyles(props);\r\n  return (\r\n    <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-evenly\">\r\n      <Typography className={classes.topico}>\r\n        Verificar a solução através de indução matemática.\r\n      </Typography>\r\n      <Typography className={classes.topico}>\r\n        <Math tex={String.raw`\\begin{cases}\r\n          T(1) = 1\\\\\r\n          T(n) = 2 \\cdot T(n/2) + n & \\text{para $n > 1$}\\\\\r\n          T(n) = n \\cdot \\log{n} + n & (palpite)\r\n          \\end{cases}`}/>\r\n      </Typography>\r\n      <Typography className={classes.topico}>\r\n        <strong>Base:&nbsp;&nbsp;</strong>\r\n        <Math tex={String.raw`T(1) = 1 \\cdot \\log{1} + 1 = 1`}/>\r\n      </Typography>\r\n      <Typography className={classes.topico}>\r\n        <strong>Passo indutivo:&nbsp;&nbsp;</strong>\r\n        <Math tex={String.raw`\\begin{cases}\r\n          T(n) & = 2 \\cdot T(n/2) + n\\\\\r\n               & = n \\cdot \\log{n/2} + n + n \\\\\r\n               & = n \\cdot (\\log{n} - \\log{2}) + n + n \\\\\r\n               & = n \\cdot \\log{n} - n + n + n\\\\\r\n               & = n \\cdot \\log{n} + n\r\n        \\end{cases}`}/>\r\n      </Typography>\r\n    </Box>\r\n  );\r\n}\r\n/*\r\n4.3-1\r\nUse the master method to give tight asymptotic bounds for the following recurrences.\r\na. T (n) = 4T (n/2) + n.\r\nb. T (n) = 4T (n/2) + n2.\r\nc. T (n) = 4T (n/2) + n3.*/","import '../../../App.css';\r\nimport SlideInicial from '../../../ImdCommons/SlideInicial';\r\nimport { Box, List, makeStyles } from '@material-ui/core';\r\nimport { baseStyles } from '../../../styles';\r\nimport SlideAgenda, { Topico } from '../../../ImdCommons/SlideAgenda';\r\nimport ImdSlide from '../../../ImdCommons/ImdSlide';\r\nimport MergeSortExample from './MergeSort';\r\nimport MergeSortCode from './MergeSortCode';\r\nimport RelacoesDeRecorrencia from './RelacoesDeRecorrencia';\r\nimport MetodoIteracao from './SubstituicaoRepetida';\r\nimport AnaliseEmArvore, { AnaliseEmArvoreExercicio, AnaliseEmArvoreFormulas, AnaliseEmArvoreFormulas2 } from './AnaliseEmArvore';\r\nimport MergeSortAnaliseEmArvore, { MergeSortAnaliseEmArvore2 } from './MergeSortAnaliseArvore';\r\nimport MetodoMestre, { MetodoMestreArvore, MetodoMestreCasos, MetodoMestreMergeSort } from './MetodoMestre';\r\nimport MetodoSubstituicao from './MetodoSubstituicao';\r\nimport Math from '../../../ImdCommons/Math';\r\nimport { useEffect } from 'react';\r\n\r\nconst useStyles = makeStyles((theme, props) => (baseStyles));\r\n\r\nfunction SlidesAula05EDB2(props) {\r\n  const classes = useStyles(props);\r\n\r\n  useEffect(() => {\r\n    document.title = \"EDB2 - Aula 05 - Resolvendo Relações de Recorrência\"\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SlideInicial\r\n        codigoDisciplina=\"IMD0039\"\r\n        nomeDisciplina=\"Estruturas de Dados Básicas 2\"\r\n        semestre=\"2020.2\"\r\n        />\r\n      <SlideAgenda>\r\n        <Topico>Relações de recorrência</Topico>\r\n        <Topico>Método da iteração repetida</Topico>\r\n        <Topico>Análise em árvore</Topico>\r\n        <Topico>Método da substituição</Topico>\r\n        <Topico>Método Mestre</Topico>\r\n        <Topico>Lista de Exercícios</Topico>\r\n      </SlideAgenda>\r\n      <ImdSlide heading=\"Relações de Recorrência\"><RelacoesDeRecorrencia/></ImdSlide>\r\n      <ImdSlide heading=\"Metodo da Iteração: Busca Binária\"><MetodoIteracao/></ImdSlide>\r\n      <ImdSlide heading=\"Análise em Árvore\"><AnaliseEmArvore/></ImdSlide>\r\n      <ImdSlide heading=\"Análise em Árvore\"><AnaliseEmArvoreFormulas/></ImdSlide>\r\n      <ImdSlide>\r\n        <AnaliseEmArvoreFormulas2/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Merge sort\">\r\n        <MergeSortExample/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Merge sort: Código\">\r\n        <MergeSortCode/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Merge sort: Análise em árvore\">\r\n        <MergeSortAnaliseEmArvore/>\r\n      </ImdSlide>\r\n      <ImdSlide>\r\n        <MergeSortAnaliseEmArvore2/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Método de substituição\">\r\n        <MetodoSubstituicao/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Exercício: Análise em árvore\">\r\n        <AnaliseEmArvoreExercicio/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Método Mestre\">\r\n        <MetodoMestre></MetodoMestre>\r\n      </ImdSlide>\r\n      <ImdSlide>\r\n        <MetodoMestreArvore/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Método Mestre\">\r\n        <MetodoMestreCasos/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Método Mestre: Merge Sort\">\r\n        <MetodoMestreMergeSort/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Exercícios\">\r\n        <List component=\"ul\" className={classes.bullets}>\r\n          <Topico>Aplique o método mestre para cada uma das seguintes recorrências: \r\n            <List component=\"ol\" className={classes.lowerRomanOl}>\r\n              <Topico><Math tex={String.raw`T(n) = 4T(n/2) + n`}/></Topico>\r\n              <Topico><Math tex={String.raw`T(n) = 16T(n/4) + n^2`}/></Topico>\r\n              <Topico><Math tex={String.raw`T(n) = 16T(n/4) + n^3`}/></Topico>\r\n            </List>\r\n          </Topico>\r\n        </List>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Referências\">\r\n        <Box className={classes.slideContentColumnBox}>\r\n          <List component=\"ul\" className={classes.numbersOl}>\r\n            <Topico>CORMEN, T.; LEISERSON, C. E.; RIVEST, R. L.; STEIN, C. Introduction to Algorithms. 2. ed. Massachusetts: The MIT Press, 2001.</Topico>\r\n            <Topico>BRASSARD, G.; BRATLEY, P. Fundamentals of algorithmics. Prentice Hall, 1995.</Topico>\r\n          </List>\r\n        </Box>\r\n      </ImdSlide>\r\n      );\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SlidesAula05EDB2;\r\n","import { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { Slide } from \"spectacle\";\r\nimport { baseStyles } from \"../styles\";\r\n\r\nconst useStyles = makeStyles((theme, props) => ({\r\n  ...baseStyles,\r\n  topico: {\r\n    fontSize: '3em',\r\n    marginBottom: '1em'\r\n  }\r\n}));\r\n\r\nexport default function ImdSlide(props) {\r\n  const classes = useStyles(props);\r\n  return (\r\n    <Slide backgroundColor=\"backgroundColor\">\r\n      <Box display=\"flex\"\r\n          className={classes.root}\r\n          flexDirection=\"column\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-around\"\r\n          spacing={3}>\r\n        <Box><Typography class={classes.topicoS3}><span class={classes.emphasis}>Duvidas?</span></Typography></Box>\r\n        <Box style={{textAlign: 'center'}}>\r\n          <Typography class={classes.topicoS1}><span class={classes.emphasis}>SIGAA</span></Typography>\r\n          <Typography class={classes.topicoS1}><span class={classes.emphasis}>Telegram</span></Typography>\r\n          <Typography class={classes.topicoS1}><span class={classes.emphasis}>Google Classroom</span></Typography>\r\n          <Typography class={classes.topicoS1}><span class={classes.emphasis}>E-mail</span></Typography>\r\n        </Box>\r\n      </Box>\r\n    </Slide>\r\n  );\r\n}","import { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { useSteps } from \"spectacle/es/hooks/use-steps\";\r\nimport { themeBaseStyles } from \"../../../styles\";\r\n\r\nconst useStyles = makeStyles((theme, props) => ({\r\n  ...themeBaseStyles(theme),\r\n}));\r\n\r\nexport default function AlgoritmosSlide(props) {\r\n  const classes = useStyles(props);\r\n  const {step, placeholder: stepPlaceholder}  = useSteps(1, {});\r\n\r\n  return (\r\n    <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"column\"\r\n        alignContent=\"center\"\r\n        justifyContent=\"space-evenly\">\r\n      {stepPlaceholder}\r\n      <Typography className={classes.topicoS3} style={{textAlign: 'center'}}>Resolvem <span className={classes.emphasis}>problemas</span>!</Typography>\r\n      { step >= 0 && <Typography className={classes.topicoS3} style={{textAlign: 'center'}}>O <span className={classes.emphasis}>limite superior</span> da complexidade de um problema é dado pelo <span className={classes.emphasis}>limite superior no pior caso do melhor algoritmo</span> que o resolve.</Typography> }\r\n    </Box>\r\n  );\r\n}","import { makeStyles } from \"@material-ui/core\";\r\nimport { Table, TableBody, TableHeader, TableRow, TableCell } from 'spectacle';\r\nimport { baseStyles } from \"../styles\";\r\n\r\nconst useStyles = makeStyles((theme, props) => ({\r\n  ...baseStyles,\r\n  complexity: {\r\n    textAlign: 'center'\r\n  },\r\n  table: {\r\n    border: '2px solid transparent',\r\n    borderCollapse: 'collapse'\r\n  },\r\n  header: {\r\n    borderBottom: `2px solid ${theme.palette.primary.main}`,\r\n    '& td': {\r\n      fontSize: '1.8rem',\r\n      padding: '1rem',\r\n      textAlign: 'center'\r\n    }\r\n  },\r\n  row: {\r\n    borderTop: `1px solid ${theme.palette.primary.light}`,\r\n    '& td': {\r\n      fontSize: '1.8rem',\r\n      padding: '1rem'\r\n    }\r\n  }\r\n}));\r\n\r\nexport default function ImdComplexityTable(props) {\r\n  const classes = useStyles(props);\r\n  return (\r\n    <Table className={classes.table}>\r\n      <TableHeader>\r\n        <TableRow className={classes.header}>\r\n          <TableCell></TableCell>\r\n          { props.labels.map(label => <TableCell>{label}</TableCell>) }\r\n        </TableRow>\r\n      </TableHeader>\r\n      <TableBody>\r\n        { props.cases.map(caseItem => (\r\n        <TableRow className={classes.row}>\r\n          <TableCell>{caseItem.label}</TableCell>\r\n          { caseItem.complexities.map(complexity => (\r\n            <TableCell className={classes.complexity}>{complexity}</TableCell>\r\n          ))}\r\n        </TableRow>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n}","import { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { useSteps } from \"spectacle/es/hooks/use-steps\";\r\nimport ImdComplexityTable from \"../../../ImdCommons/ImdComplexityTable\";\r\nimport Math from \"../../../ImdCommons/Math\";\r\nimport { themeBaseStyles } from \"../../../styles\";\r\n\r\nconst useStyles = makeStyles((theme, props) => ({\r\n  ...themeBaseStyles(theme),\r\n}));\r\n\r\nexport default function ProblemaOrdenacao(props) {\r\n  const classes = useStyles(props);\r\n  const {step, placeholder: stepPlaceholder}  = useSteps(2, {});\r\n\r\n  return (\r\n    <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"column\"\r\n        alignContent=\"center\"\r\n        justifyContent=\"space-evenly\">\r\n      {stepPlaceholder}\r\n      <ImdComplexityTable\r\n        labels={['Pior caso']}\r\n        cases={[{\r\n          label: <>Ordenação por inserção (<i>Insert sort</i>)</>,\r\n          complexities: [<Math tex={String.raw`O(n^2)`}/>]\r\n        },{\r\n          label: <>Ordenação por bolha (<i>Bubble sort</i>)</>,\r\n          complexities: [<Math tex={String.raw`O(n^2)`}/>]\r\n        },{\r\n          label: <>Merge sort</>,\r\n          complexities: [step >= 1 ? <span className={classes.emphasis}><Math tex={String.raw`O(n \\cdot \\log{n})`}/></span> : <Math tex={String.raw`O(n \\cdot \\log{n})`}/>]\r\n        }]}/>\r\n      { step >= 0 && <Typography className={classes.topicoS2} style={{textAlign: 'center'}}>Qual o <span className={classes.emphasis}>limite superior</span> da complexidade do <span className={classes.emphasis}>problema da ordenação</span>?</Typography> }\r\n      { step >= 1 && <Typography className={classes.topicoS3} style={{textAlign: 'center'}}><span className={classes.emphasis}><Math tex={String.raw`O(n \\cdot \\log{n})`}/></span></Typography> }\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport function ProblemaOrdenacao2(props) {\r\n  const classes = useStyles(props);\r\n  const {step, placeholder: stepPlaceholder}  = useSteps(3, {});\r\n\r\n  return (\r\n    <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"column\"\r\n        alignContent=\"center\"\r\n        justifyContent=\"space-evenly\">\r\n      {stepPlaceholder}\r\n      <Typography className={classes.topicoS2} style={{textAlign: 'center'}}>Existem outros algoritmos de ordenação mais eficientes?</Typography>\r\n      { step >= 0 && <Typography className={classes.topicoS2} style={{textAlign: 'center'}}><a href=\"https://www.bigocheatsheet.com/\" target=\"_blank\" rel=\"noreferrer\">https://www.bigocheatsheet.com/</a></Typography> }\r\n      { step >= 1 && <Typography className={classes.topicoS2} style={{textAlign: 'center'}}>Sim, mas apresentam restrições</Typography> }\r\n      { step >= 2 && <Typography className={classes.topicoS2} style={{textAlign: 'center'}}><a href=\"https://visualgo.net/en\" target=\"_blank\" rel=\"noreferrer\">https://visualgo.net/en</a></Typography> }\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport Tree from 'react-d3-tree';\r\nimport { useSteps } from \"spectacle/es/hooks/use-steps\";\r\nimport Math from \"../../../ImdCommons/Math\";\r\nimport { themeBaseStyles } from \"../../../styles\";\r\n\r\nconst useStyles = makeStyles((theme, props) => ({\r\n  ...themeBaseStyles(theme, props),\r\n  treeRoot: {\r\n    fontFamily: theme.typography.fontFamily,\r\n    width: '100%', \r\n    flexGrow: 1\r\n  },\r\n}));\r\n\r\n\r\nexport default function LimiteInferior(props) {\r\n  const classes = useStyles(props);\r\n  return (\r\n    <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-evenly\"\r\n        style={{textAlign: 'center'}}>\r\n      <Typography className={classes.topicoS3}>A melhor complexidade possível para resolver determinado problema.</Typography>\r\n      <Typography className={classes.topicoS3}>Em teoria, não deve ser possível desenvolver um algoritmo que tenha <span className={classes.emphasis}>complexidade de pior caso</span> menor que o <span className={classes.emphasis}>limite inferior</span> do problema que ele resolve.</Typography>\r\n    </Box>);\r\n}\r\n\r\nexport function ArvoreDecisao(props) {\r\n  const classes = useStyles(props);\r\n  const arvore = {\r\n    name: 'a<b',\r\n    children: [\r\n      {\r\n        name: 'b<c',\r\n        children: [\r\n          {\r\n            name: 'a,b,c',\r\n          },\r\n          { \r\n            name: 'a<c',\r\n            children: [\r\n              {\r\n                name: '{a,c,b}',\r\n              },\r\n              { \r\n                name: '{c,a,b}'\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      },{\r\n        name: 'b<c',\r\n        children: [\r\n          {\r\n            name: 'a<c',\r\n            children: [\r\n              {\r\n                name: '{b,a,c}',\r\n              },\r\n              { \r\n                name: '{b,c,a}'\r\n              }\r\n            ]\r\n          },\r\n          { \r\n            name: 'c,b,a',\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n  let separation = 1;\r\n\r\n  \r\n  const {step, placeholder: stepPlaceholder}  = useSteps(2, {});\r\n  \r\n  const tempNode = {name: 'x'};\r\n  let leavesFormula = String.raw`\\begin{split}\r\n    folhas & = 6 = 3! = n! \\text{(min)}\r\n    \\end{split}`;\r\n  let zoom = 1;\r\n\r\n  if(step >= 1) {\r\n    arvore.children[0].children[0].children = [tempNode, tempNode];\r\n    arvore.children[1].children[1].children = [tempNode, tempNode];\r\n    leavesFormula = String.raw`\\begin{split}\r\n    folhas & = 6 = 3! = n! \\text{(min)} \\\\\r\n           & = 8 = 2^h \\text{(max)}\r\n    \\end{split}`;\r\n    zoom = 0.75;\r\n  }\r\n\r\n  return (\r\n    <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"row\"\r\n        alignItems=\"stretch\"\r\n        justifyContent=\"space-evenly\">\r\n      {stepPlaceholder}\r\n      <Box className={classes.treeRoot}>\r\n          <Tree data={arvore}\r\n            orientation=\"vertical\"\r\n            separation={{siblings: separation, nonSiblings: separation}}\r\n            translate={{ y: 50, x: 445}}\r\n            zoom={zoom}\r\n          />\r\n      </Box>\r\n      <Box display=\"flex\"\r\n          flexDirection=\"column\"\r\n          alignItems=\"left\"\r\n          justifyContent=\"space-around\">\r\n        <Typography className={classes.topicoS2}><Math tex={String.raw`h = 3`}/></Typography>\r\n        <Typography className={classes.topicoS2}>\r\n          <Math tex={leavesFormula}/>\r\n        </Typography>\r\n      </Box>\r\n    </Box>);\r\n}\r\n\r\nexport function ComplexidadeArvoreDecisao(props) {\r\n  const classes = useStyles(props);\r\n  const {step, placeholder: stepPlaceholder}  = useSteps(1, {});\r\n  return (\r\n    <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-evenly\"\r\n        style={{textAlign: 'center'}}>\r\n      {stepPlaceholder}\r\n      <Typography className={classes.topicoS2}>A complexidade de pior caso é a maior profundidade de uma folha.</Typography>\r\n      <Typography className={classes.topicoS2}>Ou seja, a <span className={classes.emphasis}>altura</span> da árvore.</Typography>\r\n      <Typography className={classes.topicoS2}><span className={classes.emphasis}><Math tex={String.raw`\\begin{split}\r\n        2^h & \\geqslant n! \\\\\r\n          h & \\geqslant log(n!) \\text{, aplicando a aproximação de Stirling} \\\\\r\n            & \\geqslant n \\cdot \\log_2{n} - n \\cdot \\log_2{e} + O(\\log_2{n})\r\n        \\end{split}`}/></span></Typography>\r\n      { step >= 0 && <Typography className={classes.topicoS3} style={{fontSize: '5em'}}><span className={classes.emphasis}><Math tex={String.raw`h \\in O(n \\cdot \\log{n})`}/></span></Typography> }\r\n    </Box>);\r\n}\r\n\r\nexport function AlgoritmoOtimo(props) {\r\n  const classes = useStyles(props);\r\n  const {step, placeholder: stepPlaceholder}  = useSteps(2, {});\r\n  return (\r\n    <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-evenly\"\r\n        style={{textAlign: 'center'}}>\r\n      {stepPlaceholder}\r\n      { step < 1 && <Typography className={classes.topicoS3}>Algoritmo  que tenha <span className={classes.emphasis}>limite superior</span> igual ao <span className={classes.emphasis}>limite inferior do problema</span> que ele resolve.</Typography> }\r\n      { step === 0 && <Typography className={classes.topicoS3}>Se um dado <Math tex={String.raw`I`}/> é limite inferior de um problema P, <Math tex={String.raw`\\Omega(I)`}/>, e um dado algorítmo tem complexidade de pior caso <Math tex={String.raw`O(I)`}/>, então ele é considerado ótimo.</Typography> }\r\n      { step >= 1 && <Typography className={classes.topicoS3}>O <i>Merge sort</i> é algoritmo ótimo para a solução do problema de ordenação por comparação?</Typography> }\r\n    </Box>);\r\n}\r\n","import '../../../App.css';\r\nimport SlideInicial from '../../../ImdCommons/SlideInicial';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { baseStyles } from '../../../styles';\r\nimport ImdSlide from '../../../ImdCommons/ImdSlide';\r\nimport ImdSlideDuvidas from '../../../ImdCommons/ImdSlideDuvidas';\r\nimport { useEffect } from 'react';\r\nimport AlgoritmosSlide from './Algoritmos';\r\nimport ProblemaOrdenacao from './ProblemaOrdenacao';\r\nimport {ProblemaOrdenacao2} from './ProblemaOrdenacao';\r\nimport SlideAgenda, { Topico } from '../../../ImdCommons/SlideAgenda';\r\nimport LimiteInferior, { ArvoreDecisao, ComplexidadeArvoreDecisao, AlgoritmoOtimo } from './LimiteInferior';\r\n\r\nconst useStyles = makeStyles((theme, props) => (baseStyles));\r\n\r\nfunction SlidesAula05EDB2(props) {\r\n  const classes = useStyles(props);\r\n\r\n  useEffect(() => {\r\n    document.title = \"EDB2 - Aula 06 - Complexidade de Algoritmos vs Complexidade de Problemas\"\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SlideInicial\r\n        codigoDisciplina=\"IMD0039\"\r\n        nomeDisciplina=\"Estruturas de Dados Básicas 2\"\r\n        assunto=\"Complexidade de Algoritmos vs Complexidade de Problemas\"\r\n        semestre=\"2020.2\"\r\n        />\r\n      <SlideAgenda>\r\n        <Topico>Limite superior de um problema</Topico>\r\n        <Topico>Limite inferior de um problema</Topico>\r\n        <Topico>Árvore de decisão</Topico>\r\n        <Topico>Algoritmo ótimo</Topico>\r\n      </SlideAgenda>\r\n      <ImdSlide heading=\"Algoritmos\">\r\n        <AlgoritmosSlide/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Problema da ordenação\">\r\n        <ProblemaOrdenacao/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Problema da ordenação\">\r\n        <ProblemaOrdenacao2/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Limite Inferior\">\r\n        <LimiteInferior/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore de Decisão\">\r\n        <ArvoreDecisao/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore de Decisão\">\r\n        <ComplexidadeArvoreDecisao/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Algoritmo ótimo\">\r\n        <AlgoritmoOtimo/>\r\n      </ImdSlide>\r\n      <ImdSlideDuvidas/>\r\n      );\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SlidesAula05EDB2;\r\n","import { makeStyles } from '@material-ui/core';\r\nimport { themeBaseStyles } from '../styles';\r\n\r\nconst useStyles = makeStyles((theme, props) => ({\r\n  ...themeBaseStyles(theme, props),\r\n  innerRoot: {\r\n    fontSize: '1.5em'\r\n  },\r\n  nomeClasse: {\r\n    border: '1px solid black',\r\n    padding: '0.5em',\r\n    textAlign: 'center'\r\n  },\r\n  atributos: {\r\n    border: '1px solid black',\r\n    listStyle: 'none',\r\n    padding: '0.5em',\r\n    margin: '0'\r\n  },\r\n  metodos: {\r\n    border: '1px solid black',\r\n    listStyle: 'none',\r\n    padding: '0.5em',\r\n    margin: '0'\r\n  }\r\n}));\r\n\r\n\r\nexport default function DiagramaDeClasse(props) {\r\n  const classes = useStyles(props);\r\n  return (\r\n    <div className={[classes.innerRoot]}>\r\n      <div className={classes.nomeClasse}>{props.nome}</div>\r\n      <ul className={classes.atributos}>\r\n        {props.atributos.map(atributo => <li>{atributo}</li>)}\r\n      </ul>\r\n      <ul className={classes.metodos}>\r\n        {props.metodos.map(metodo => <li>{metodo}</li>)}\r\n      </ul>\r\n    </div>\r\n  );  \r\n}","import { Box, makeStyles, Typography } from '@material-ui/core';\r\nimport { useSteps } from 'spectacle/es/hooks/use-steps';\r\nimport DiagramaDeClasse from '../../../ImdCommons/DiagramaDeClasse';\r\nimport { themeBaseStyles } from '../../../styles';\r\n\r\nconst useStyles = makeStyles((theme, props) => ({\r\n  ...themeBaseStyles(theme, props),\r\n}));\r\n\r\n\r\nexport function HerancaDiagramasDeClasse(props) {\r\n  const classes = useStyles(props);\r\n  \r\n  const {step, placeholder: stepPlaceholder} = useSteps(2, {});\r\n\r\n  const itemClass = step >= 0 ? classes.danger : undefined;\r\n\r\n  return (\r\n    <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"column\"\r\n        alignItems=\"stretch\"\r\n        justifyContent=\"space-evenly\">\r\n      <Typography style={{textAlign: 'center', fontSize: '2em'}}>Vamos analisar o exemplo. O que podemos perceber?</Typography>\r\n      <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n        {stepPlaceholder}\r\n        <Box>\r\n          <DiagramaDeClasse \r\n            nome=\"ContaCorrente\"\r\n            atributos={[\r\n              <span className={itemClass}>titular: Contato</span>,\r\n              <span className={itemClass}>numeroAgencia: String</span>, \r\n              <span className={itemClass}>numeroConta: String</span>,\r\n              <span className={itemClass}>saldo: BigDecimal</span>,\r\n              <span className={itemClass}>dataAbertura: LocalDate</span>\r\n            ]}\r\n            metodos={[\r\n              <span className={itemClass}>sacar(BigDecimal valor)</span>,\r\n              <span className={itemClass}>depositar(BigDecimal valor)</span>\r\n            ]}/>\r\n        </Box>\r\n        <Box>\r\n          <DiagramaDeClasse \r\n            nome=\"ContaAplicacao\"\r\n            atributos={[\r\n              <span className={itemClass}>titular: Contato</span>,\r\n              <span className={itemClass}>numeroAgencia: String</span>, \r\n              <span className={itemClass}>numeroConta: String</span>,\r\n              <span className={itemClass}>saldo: BigDecimal</span>,\r\n              'taxaRendimento: BigDecimal',\r\n              <span className={itemClass}>dataAbertura: LocalDate</span>\r\n            ]}\r\n            metodos={[\r\n              <span className={itemClass}>sacar(BigDecimal valor)</span>,\r\n              <span className={itemClass}>depositar(BigDecimal valor)</span>,\r\n              'computarRendimento()'\r\n            ]}/>\r\n        </Box>\r\n      </Box>\r\n      { step >= 1 && <Typography style={{textAlign: 'center', fontSize: '3em'}}><span className={classes.danger}>Duplicação de código!</span></Typography> }\r\n    </Box>\r\n  );  \r\n}","import '../../../App.css';\r\nimport SlideInicial from '../../../ImdCommons/SlideInicial';\r\nimport { List, makeStyles } from '@material-ui/core';\r\nimport { themeBaseStyles } from '../../../styles';\r\nimport SlideAgenda, { Topico } from '../../../ImdCommons/SlideAgenda';\r\nimport ImdSlide from '../../../ImdCommons/ImdSlide';\r\nimport { useEffect } from 'react';\r\nimport { HerancaDiagramasDeClasse } from './Heranca';\r\n\r\nconst useStyles = makeStyles((theme, props) => (themeBaseStyles(theme, props)));\r\n\r\nexport default function SlidesAula05LP2(props) {\r\n  const classes = useStyles(props);\r\n\r\n  useEffect(() => {\r\n    document.title = \"LP2 - Aula 05 - Herança e Polimorfismo\"\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SlideInicial\r\n        codigoDisciplina=\"IMD0040\"\r\n        nomeDisciplina=\"Linguagem de Programação 2\"\r\n        semestre=\"2020.2\"\r\n        />\r\n      <SlideAgenda>\r\n        <Topico>Herança</Topico>\r\n        <Topico>Polimorfismo</Topico>\r\n      </SlideAgenda>\r\n      <ImdSlide heading=\"Herança\">\r\n        <List component=\"ul\" className={classes.bullets}>\r\n          <Topico className={classes.topicoS1}><span className={classes.emphasis}>Herança</span> é um mecanismo que permite que uma classe possa herdar o comportamento e as características de outra classe.</Topico>\r\n          <Topico className={classes.topicoS1}>ao mesmo tempo que <span className={classes.emphasis}>novos comportamentos e características</span> podem ser estabelecidos.</Topico>\r\n          <Topico className={classes.topicoS1}>Podemos dizer que uma subclasse <span className={classes.emphasis}>herda</span> de sua superclasse.</Topico>\r\n          <Topico className={classes.topicoS1}>A subclasse é mais <span className={classes.emphasis}>específica</span> que a superclasse. Por isso, chamamos de <span className={classes.emphasis}>especialização</span>especialização.</Topico>\r\n        </List>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Herança\">\r\n        <HerancaDiagramasDeClasse/>\r\n      </ImdSlide>\r\n    </>\r\n  );\r\n}\r\n","import { makeStyles } from \"@material-ui/core\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { themeBaseStyles } from \"../styles\";\r\n\r\nconst useStyles = makeStyles((theme, props) => ({\r\n  ...themeBaseStyles(theme, props),\r\n  nodeText: {\r\n    fill: 'white',\r\n    fontSize: '1.5em',\r\n    fontFamily: theme.typography.fontFamily\r\n  },\r\n  highlightText: {\r\n    fill: 'white',\r\n    fontSize: '1.5em',\r\n    fontFamily: theme.typography.fontFamily,\r\n    fontWeight: 'bold'\r\n  },\r\n  nodeCircle: {\r\n    fill: theme.palette.secondary.main\r\n  },\r\n  highlightCircle: {\r\n    fill: theme.palette.secondary.light\r\n  },\r\n  lines: {\r\n    stroke: theme.palette.secondary.main,\r\n    strokeSize: '1px'\r\n  }\r\n}));\r\n\r\nexport function ImdLinkedList(props) {\r\n  const classes = useStyles(props);\r\n  let { data, nodeSize, spacing, width, height } = props;\r\n  width = width || 600;\r\n  height = height || 500;\r\n  nodeSize = nodeSize || 60;\r\n  spacing = spacing || 30;\r\n\r\n  const refContainer = useRef(null)\r\n\r\n  useEffect(() => {\r\n    d3.select(refContainer.current)\r\n      .select(\"svg\")\r\n      .remove();\r\n    const svg = d3.select(refContainer.current)\r\n      .append(\"svg\")\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height);\r\n    const startX = width/2 - (data.length/2)*nodeSize - ((data.length -1)/2)*spacing + nodeSize/2;\r\n    const startY = height/2;\r\n    for (let i = 0; i < data.length; i++) {\r\n      const center = [startX + (nodeSize + spacing)*i, startY]\r\n      if(i < data.length-1) {\r\n        svg.append('line')\r\n          .attr('x1', center[0])\r\n          .attr('y1', center[1])\r\n          .attr('x2', center[0]+nodeSize/2+spacing)\r\n          .attr('y2', center[1])\r\n          .attr('class', classes.lines);\r\n        svg.append('line')\r\n          .attr('x1', center[0]+nodeSize/2+spacing-spacing/2)\r\n          .attr('y1', center[1]-spacing/4)\r\n          .attr('x2', center[0]+nodeSize/2+spacing)\r\n          .attr('y2', center[1])\r\n          .attr('class', classes.lines);\r\n        svg.append('line')\r\n          .attr('x1', center[0]+nodeSize/2+spacing-spacing/2)\r\n          .attr('y1', center[1]+spacing/4)\r\n          .attr('x2', center[0]+nodeSize/2+spacing)\r\n          .attr('y2', center[1])\r\n          .attr('class', classes.lines);\r\n      }\r\n      let g = svg.append('g')\r\n        .attr('transform', 'translate('+center[0]+','+center[1]+')');\r\n      g.append('circle')\r\n        .attr('r', nodeSize/2)\r\n        .attr('class', data[i].highlight ? classes.highlightCircle : classes.nodeCircle);\r\n      g.append('text')\r\n        .attr('text-anchor', 'middle')\r\n        .attr('dy', '.3em')\r\n        .attr('alignment-baseline', 'middle')\r\n        .attr('class', data[i].highlight ? classes.highlightText : classes.nodeText)\r\n        .text(data[i].value);\r\n    }\r\n    \r\n  }, [data, height, nodeSize, spacing, width, classes.highlightCircle, classes.highlightText, classes.lines, classes.nodeCircle, classes.nodeText]);\r\n\r\n  return (\r\n    <div ref={refContainer}>\r\n    </div>\r\n  );\r\n}","import { makeStyles } from \"@material-ui/core\";\r\nimport { useEffect, useRef } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport { themeBaseStyles } from \"../styles\";\r\n\r\nconst useStyles = makeStyles((theme, props) => ({\r\n  ...themeBaseStyles(theme, props),\r\n  nodeText: {\r\n    fill: 'white',\r\n    fontSize: '1.5em',\r\n    fontFamily: theme.typography.fontFamily\r\n  },\r\n  highlightText: {\r\n    fill: 'white',\r\n    fontSize: '1.5em',\r\n    fontFamily: theme.typography.fontFamily,\r\n    fontWeight: 'bold'\r\n  },\r\n  nodeCircle: {\r\n    fill: theme.palette.secondary.main\r\n  },\r\n  highlightCircle: {\r\n    fill: theme.palette.secondary.light\r\n  },\r\n  lines: {\r\n    stroke: theme.palette.secondary.main,\r\n    strokeSize: '1px'\r\n  }\r\n}));\r\n\r\nexport function ImdVector(props) {\r\n  const classes = useStyles(props);\r\n  let { data, nodeSize, spacing, width, height } = props;\r\n  width = width || 600;\r\n  height = height || 500;\r\n  nodeSize = nodeSize || 60;\r\n  spacing = spacing || 1;\r\n\r\n  const refContainer = useRef(null)\r\n\r\n  useEffect(() => {\r\n    d3.select(refContainer.current)\r\n      .select(\"svg\")\r\n      .remove();\r\n    const svg = d3.select(refContainer.current)\r\n      .append(\"svg\")\r\n      .attr(\"width\", width)\r\n      .attr(\"height\", height);\r\n    const startX = width/2 - (data.length/2)*nodeSize - ((data.length -1)/2)*spacing;\r\n    const startY = height/2 - nodeSize/2;\r\n    for (let i = 0; i < data.length; i++) {\r\n      const center = [startX + (nodeSize + spacing)*i, startY]\r\n      let g = svg.append('g')\r\n        .attr('transform', 'translate('+center[0]+','+center[1]+')');\r\n      g.append('rect')\r\n        .attr('height', nodeSize)\r\n        .attr('width', nodeSize)\r\n        .attr('r', nodeSize/2)\r\n        .attr('class', data[i].highlight ? classes.highlightCircle : classes.nodeCircle);\r\n      g.append('text')\r\n        .attr('y', nodeSize/2)\r\n        .attr('x', nodeSize/2)\r\n        .attr('text-anchor', 'middle')\r\n        .attr('dy', '.3em')\r\n        .attr('alignment-baseline', 'middle')\r\n        .attr('class', data[i].highlight ? classes.highlightText : classes.nodeText)\r\n        .text(data[i].value);\r\n    }\r\n    \r\n  }, [data, height, nodeSize, width, spacing, classes.highlightCircle, classes.highlightText, classes.lines, classes.nodeCircle, classes.nodeText]);\r\n\r\n  return (\r\n    <div ref={refContainer}>\r\n    </div>\r\n  );\r\n}","export default function HideByStep(props) {\r\n  const {visibleIn, step} = props;\r\n  let visible = false;\r\n  let ranges = visibleIn.split(',');\r\n  for (let i = 0; i < ranges.length; i++) {\r\n    let [start, end] = ranges[i].split('-');\r\n    end = end !== undefined ? (end !== \"\" ? end : Infinity) : start;\r\n    visible = visible || (step >= start && step <= end);\r\n  }\r\n\r\n  return <div style={{visibility: (visible?  'visible':'hidden')}}>\r\n    {props.children}\r\n  </div>\r\n}","import { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { themeBaseStyles } from \"../../../styles\";\r\nimport { ImdLinkedList } from \"../../../ImdCommons/ImdLinkedList\";\r\nimport { ImdVector } from \"../../../ImdCommons/ImdVector\";\r\nimport { useSteps } from \"spectacle/es/hooks/use-steps\";\r\nimport HideByStep from \"../../../ImdCommons/HideByStep\";\r\n\r\nconst useStyles = makeStyles((theme, props) => ({\r\n  ...themeBaseStyles(theme, props),\r\n}));\r\n\r\n\r\nexport function BuscaBinaria(props) {\r\n  const classes = useStyles(props);\r\n  const source = [{value: 8}, {value: 12}, {value: 15}, {value: 18}, {value: 28}, {value: 45}, {value: 62}];\r\n  const sourceList = [{value: 8}, {value: 12}, {value: 15}, {value: 18}, {value: 28}, {value: 45}, {value: 62}];\r\n  const {step, placeholder: stepPlaceholder}  = useSteps(4, {});\r\n\r\n  if (step >= 0) source[3].highlight = true;\r\n\r\n  return (\r\n    <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-evenly\"\r\n        style={{textAlign: 'center'}}>\r\n      {stepPlaceholder}\r\n      <ImdVector\r\n        data={source}\r\n        height={100}  />\r\n      <HideByStep step={step} visibleIn=\"0-\">\r\n        <Typography className={classes.topicoS2}>Em vetor utilizamos o índice, mas a <span className={classes.emphasis}>estrutura é estática</span>.</Typography>\r\n      </HideByStep>\r\n      <HideByStep step={step} visibleIn=\"1-\">\r\n        <ImdLinkedList\r\n          data={sourceList}\r\n          height={100} />\r\n      </HideByStep>\r\n      <HideByStep step={step} visibleIn=\"2-\">\r\n        <Typography className={classes.topicoS2}>A lista ligada é dinâmica, mas não temos como saber quem é o <span className={classes.emphasis}>nó do meio</span>.</Typography>\r\n      </HideByStep>\r\n      <HideByStep step={step} visibleIn=\"3-\">\r\n        <Typography className={classes.topicoS3}><span class={classes.danger}>Como resolver?</span></Typography>\r\n      </HideByStep>\r\n    </Box>\r\n  );\r\n}","import { Box, makeStyles, Typography } from \"@material-ui/core\";\r\nimport { PermPhoneMsgTwoTone } from \"@material-ui/icons\";\r\nimport Tree from \"react-d3-tree\";\r\nimport Math from \"../../../ImdCommons/Math\";\r\nimport { themeBaseStyles } from \"../../../styles\";\r\n\r\nconst useStyles = makeStyles((theme, props) => ({\r\n  ...themeBaseStyles(theme, props),\r\n  treeRoot: (props) => ({\r\n    fontFamily: theme.typography.fontFamily,\r\n    width: props.relacoes ? '640px' : '100%', \r\n    height: '100%'\r\n  }),\r\n  nodeHighlight: {\r\n    fill: theme.palette.highlight.main,\r\n    stroke: 'none'\r\n  },\r\n  nodeFade: {\r\n    fill: theme.palette.secondary.light,\r\n    stroke: 'none'\r\n  },\r\n  nodeEmpty: {\r\n    fill: \"transparent\",\r\n    color: theme.palette.highlight.main,\r\n    stroke: \"none\"\r\n  },\r\n  node: {\r\n    fill: theme.palette.secondary.main,\r\n    stroke: 'none'\r\n  },\r\n  nodeText: {\r\n    fill: 'white',\r\n    fontSize: '1.5em',\r\n    fontFamily: theme.typography.fontFamily,\r\n    fontWeight: 'bold',\r\n    stroke: 'none'\r\n  },\r\n  boldLink: {\r\n    stroke: theme.palette.danger.main + ' !important',\r\n    strokeWidth: '2px'\r\n  }\r\n}));\r\n\r\nexport function ArvoresBuscaBinaria(props) {\r\n  \r\n  function formulaBalloon(formula, width, options) {\r\n    const formulaWithArrow = (options && options.pos === 'right') ? String.raw`\\longleftarrow ${formula}` : String.raw`${formula} \\longrightarrow `;\r\n    const x = (options && options.pos === 'right') ? 40 : - width - 40;\r\n    return {\r\n      content: () => (\r\n        <div>\r\n          <Math tex={formulaWithArrow}/>\r\n        </div>),\r\n      width: width,\r\n      height: 50,\r\n      x: x,\r\n      y: -10\r\n    }\r\n  }\r\n\r\n  const classes = useStyles(props);\r\n  let arvore;\r\n  let x = 640;\r\n  let y = 100;\r\n  let size = 60;\r\n  let linkClass = () => classes.linkClass;\r\n  if (props.arvore) {\r\n    arvore = props.arvore;\r\n  } else if (props.buscaBinaria) {\r\n    arvore = {\r\n      name: '18',\r\n      children: [\r\n        {\r\n          name: '12',\r\n          children: [\r\n            {\r\n              name: '8',\r\n            },\r\n            { \r\n              name: '15',\r\n            }\r\n          ]\r\n        },{\r\n          name: '45',\r\n          children: [\r\n            {\r\n              name: '28',\r\n            },\r\n            { \r\n              name: '62',\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  } else {\r\n    arvore = {\r\n      name: 'A',\r\n      children: [\r\n        {\r\n          name: 'B',\r\n          children: [\r\n            {\r\n              name: 'E',\r\n            },\r\n            { \r\n              name: 'F',\r\n            }\r\n          ]\r\n        },{\r\n          name: 'C',\r\n          children: [\r\n            {\r\n              name: 'G',\r\n            }\r\n          ]\r\n        },{\r\n          name: 'D'\r\n        }\r\n      ]\r\n    }\r\n  }\r\n  let separation = 1, zoom = 1;\r\n\r\n  if(props.raiz) {\r\n    arvore.attributes = {highlight: true, balloon: formulaBalloon('r', 40)};\r\n  }\r\n  \r\n  if(props.subarvore) {\r\n    arvore.children[0].attributes = {highlight: true}\r\n    arvore.children[0].children[0].attributes = {highlight: true};\r\n    arvore.children[0].children[1].attributes = {highlight: true};\r\n    arvore.children[0].attributes.balloon = formulaBalloon('T_B', 60);\r\n  }\r\n  \r\n  if(props.subarvore2) {\r\n    arvore.children[0].children[0].attributes = {highlight: true};\r\n    arvore.children[0].children[0].attributes.balloon = formulaBalloon('T_E', 60);\r\n  }\r\n  \r\n  if(props.folhas) {\r\n    arvore.children[0].children[0].attributes = {highlight: true};\r\n    arvore.children[0].children[1].attributes = {highlight: true};\r\n    arvore.children[1].children[0].attributes = {highlight: true};\r\n    arvore.children[2].attributes = {highlight: true};\r\n  }\r\n\r\n  if(props.caminhos) {\r\n    linkClass = ({ source, target }, orientation) => {\r\n      if (target.data.name === 'B' || target.data.name === 'F') return classes.boldLink;\r\n      else return classes.linkClass;\r\n    }\r\n    y = 50;\r\n  }\r\n  \r\n  if(props.grau || props.grauArvore) {\r\n    arvore.attributes = {balloon: formulaBalloon('2', 50)};\r\n    arvore.children[0].attributes = {balloon: formulaBalloon('2', 50)};\r\n    arvore.children[1].attributes = {balloon: formulaBalloon('3', 50)};\r\n    arvore.children[1].children = [\r\n      {name: 'G', attributes: {balloon: formulaBalloon('0', 50)}},\r\n      {name: 'H', attributes: {balloon: formulaBalloon('0', 50)}},\r\n      {name: 'I', attributes: {balloon: formulaBalloon('0', 50)}},\r\n    ];\r\n    arvore.children[0].children[0].attributes = {balloon: formulaBalloon('0', 50)};\r\n    arvore.children[0].children[1].attributes = {balloon: formulaBalloon('0', 50)};\r\n    arvore.children[1].children[0].attributes = {balloon: formulaBalloon('0', 50)};\r\n    delete(arvore.children[2]);\r\n    separation = 1.3;\r\n    y = 50;\r\n    size = 48;\r\n  }\r\n  \r\n  if(props.grauArvore) {\r\n    arvore.attributes = {balloon: formulaBalloon(String.raw`\\text{?}`, 40)};\r\n    arvore.children[0].attributes = {balloon: formulaBalloon(String.raw`\\text{Binária}`, 100)};\r\n    arvore.children[1].attributes = {balloon: formulaBalloon(String.raw`\\text{Ternária}`, 110)};\r\n    arvore.children[0].children[0].attributes = {};\r\n    arvore.children[0].children[1].attributes = {};\r\n    arvore.children[1].children[0].attributes = {};\r\n    arvore.children[1].children[1].attributes = {};\r\n    arvore.children[1].children[2].attributes = {};\r\n    separation = 2;\r\n    y = 50;\r\n  }\r\n\r\n  if(props.altura) {\r\n\r\n    arvore.attributes = {balloon: formulaBalloon('h = 3', 80)}\r\n    arvore.children[0].attributes = {balloon: formulaBalloon('h = 2', 80)}\r\n    arvore.children[0].children[0].attributes = {balloon: formulaBalloon('h = 1', 80)}\r\n    arvore.children[2].attributes = {balloon: formulaBalloon('h = 1', 80, {pos: 'right'})}\r\n  }\r\n\r\n  if(props.nivel) {\r\n\r\n    arvore.attributes = {balloon: formulaBalloon('nível = 0', 110)}\r\n    arvore.children[0].attributes = {balloon: formulaBalloon('nível = 1', 110)}\r\n    arvore.children[0].children[0].attributes = {balloon: formulaBalloon('nível = 2', 110)}\r\n    if (arvore.children[2]) arvore.children[2].attributes = {balloon: formulaBalloon('nível = 1', 110, {pos: 'right'})}\r\n  }\r\n\r\n  if(props.relacoes) {\r\n    zoom = 0.9;\r\n    x = 320;\r\n  }\r\n\r\n  if(props.estritamenteBinaria) {\r\n    arvore.attributes = {balloon: formulaBalloon('grau = 2', 110)}\r\n    arvore.children[0].attributes = {balloon: formulaBalloon('grau = 0', 110)}\r\n    arvore.children[1].attributes = {balloon: formulaBalloon('grau = 2', 110)}\r\n    arvore.children[1].children[0].attributes = {balloon: formulaBalloon('grau = 0', 110)}\r\n    arvore.children[1].children[1].attributes = {balloon: formulaBalloon('grau = 2', 110)}\r\n    arvore.children[1].children[1].children[0].attributes = {balloon: formulaBalloon('grau = 0', 110)}\r\n    arvore.children[1].children[1].children[1].attributes = {balloon: formulaBalloon('grau = 0', 110)}\r\n    zoom=0.75;\r\n    separation = 1.5;\r\n  }\r\n  \r\n  if (props.binariaCompleta) {\r\n    zoom = 0.75;\r\n  }\r\n\r\n  if(props.arvoreBinariaSubarvoresVazias) {\r\n    arvore.children = [{name: '1', attributes: {fade: true}}, {name: '2', attributes: {fade: true}}];\r\n  }\r\n  if (props.arvoreBinariaSubarvoresVazias2) {\r\n    zoom = 0.75;\r\n    arvore.children[0].children[0].children = [{name: '1', attributes: {fade: true}}, {name: '2', attributes: {fade: true}}];\r\n    arvore.children[0].children[1].children = [{name: '3', attributes: {fade: true}}, {name: '4', attributes: {fade: true}}];\r\n    arvore.children[1].children[0].children = [{name: '5', attributes: {fade: true}}, {name: '6', attributes: {fade: true}}];\r\n    arvore.children[1].children[1] = {name: '7', attributes: {fade: true}};\r\n    delete arvore.children[2];\r\n  }\r\n  if (props.arvoreBinariaSubarvoresVazias3) {\r\n    zoom = 0.75;\r\n    arvore.children[0].children[0].children = [{name: '1', attributes: {fade: true}}, {name: '2', attributes: {fade: true}}];\r\n    arvore.children[0].children[1].children = [{name: '3', attributes: {fade: true}}, {name: '4', attributes: {fade: true}}];\r\n    arvore.children[1].children = [{name: '5', attributes: {fade: true}}, {name: '6', attributes: {fade: true}}];\r\n    delete arvore.children[2];\r\n  }\r\n\r\n  if (props.arvoreZiguezague) {\r\n    delete arvore.children[0].children[1]\r\n    delete arvore.children[2];\r\n    delete arvore.children[1];\r\n  }\r\n\r\n  if (props.withCode) {\r\n    zoom = 0.75;\r\n  }\r\n  \r\n  if (props.zoom) {\r\n    zoom = props.zoom;\r\n  }\r\n\r\n  return (\r\n      <Box className={classes.treeRoot}>\r\n          <Tree data={arvore}\r\n            orientation=\"vertical\"\r\n            pathClassFunc={linkClass}\r\n            separation={{siblings: separation, nonSiblings: separation}}\r\n            translate={{ y, x}}\r\n            zoom={zoom}\r\n            renderCustomNodeElement={(param, appState) => {\r\n              const fade = param.nodeDatum.attributes && param.nodeDatum.attributes.fade;\r\n              const highlight = param.nodeDatum.attributes && param.nodeDatum.attributes.highlight;\r\n              const balloon = param.nodeDatum.attributes && param.nodeDatum.attributes.balloon;\r\n              const empty = param.nodeDatum.attributes && param.nodeDatum.attributes.empty;\r\n              const color = param.nodeDatum.attributes && param.nodeDatum.attributes.color;\r\n              let classname = classes.node;\r\n              if (highlight) {\r\n                classname = classes.nodeHighlight;\r\n              } else if (fade) {\r\n                classname = classes.nodeFade;\r\n              } else if (empty) { \r\n                classname = classes.nodeEmpty;\r\n              }\r\n              \r\n              const styleText = empty && color ? {\r\n                fill: color\r\n              } : {};\r\n              const styleCircle = !empty && color ? {\r\n                fill: color\r\n              } : {};\r\n\r\n              return (\r\n                <>\r\n                  <g>\r\n                    <circle x={size/2} y={size/2} className={classname} r={size/2} style={styleCircle}/>\r\n                    <text dominantBaseline=\"middle\" textAnchor=\"middle\" className={classes.nodeText} style={styleText}>{param.nodeDatum.name}</text>\r\n                    { balloon ? <foreignObject x={balloon.x} y={balloon.y} width={balloon.width} height={balloon.height}>{balloon.content()}</foreignObject> : ''}\r\n                  </g>\r\n                </>\r\n              );\r\n            }}\r\n          />\r\n      </Box>);\r\n}\r\n\r\n\r\nexport function ArvoresConceitos(props) {\r\n  const classes = useStyles(props);\r\n  \r\n  return (\r\n    <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"column\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"space-evenly\">\r\n      <Typography className={classes.topicoS2}>Conjunto de finito de elementos chamados de <span className={classes.emphasis}>vértices ou nós</span>.</Typography>\r\n      <Typography className={classes.topicoS2}>Árvore vazia: <span className={classes.emphasis}><Math tex={String.raw`T = \\varnothing`}/></span></Typography>\r\n      <Typography className={classes.topicoS2}>Referenciada pela sua <span className={classes.emphasis}>raiz r</span></Typography>\r\n      <Typography className={classes.topicoS2}>Cada nó pode ter de <span className={classes.emphasis}>0 a m nós filhos</span>.</Typography>\r\n      <Typography className={classes.topicoS2}>Para cara nó <Math tex={String.raw`v`}/> descendente de <Math tex={String.raw`r`}/>, existe uma <span className={classes.emphasis}>subárvore de <Math tex={String.raw`T`}/> chamada de <Math tex={String.raw`T_v`}/></span>.</Typography>\r\n    </Box>);\r\n}\r\nexport function ArvoresDefinicao(props) {\r\n  const classes = useStyles(props);\r\n  \r\n  return (\r\n    <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"column\"\r\n        alignItems=\"left\"\r\n        justifyContent=\"space-evenly\">\r\n      <Typography className={classes.topicoS2}>Uma <span className={classes.emphasis}>árvore enraizada T</span>, ou simplesmente árvore, é um conjunto finito de elementos denominados nós ou vértices tais que</Typography>\r\n      <Typography className={classes.topicoS2}>T = Ø, e a árvore é dita vazia, ou</Typography>\r\n      <Typography className={classes.topicoS2}>existe um nó especial chamado raiz de T(r(T)); os restantes constituem um único conjunto vazio ou são\r\n        divididos em m ≥ 1 conjuntos disjuntos não vazios, as subárvores de r(T), ou simplesmente subárvores,\r\n        cada qual, por sua vez, uma árvore.</Typography>\r\n    </Box>);\r\n}\r\nexport function ArvoreBinariaDefinicao(props) {\r\n  const classes = useStyles(props);\r\n  \r\n  return (\r\n    <Box display=\"flex\"\r\n        className={classes.root}\r\n        flexDirection=\"column\"\r\n        alignItems=\"left\"\r\n        justifyContent=\"space-evenly\">\r\n      <Typography className={classes.topicoS2}>Uma <span className={classes.emphasis}>árvore binária T</span> é um conjunto finito de elementos denominados nós ou vértices, tal que</Typography>\r\n      <Typography className={classes.topicoS2}>T = Ø, e a árvore é dita vazia, ou</Typography>\r\n      <Typography className={classes.topicoS2}>existe um nó especial chamado raiz de T(r(T)), e os restantes podem ser divididos em <span className={classes.emphasis}>dois subconjuntos\r\n        disjuntos, TE(r(T)) e TD(r(T))</span>, a subárvore esquerda e a direita da raiz, respectivamente, as quais são\r\n        também árvores binárias.</Typography>\r\n    </Box>);\r\n}","export const arvoreBinaria = {\r\n  name: 'A',\r\n  children: [\r\n    {\r\n      name: 'B',\r\n      children: [\r\n        {name: 'D'},\r\n        {name: 'E'}\r\n      ]\r\n    },{\r\n      name: 'C',\r\n      children: [\r\n        {name: 'F'},\r\n        {name: 'G'}\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\nexport const arvoreBinariaBusca = {\r\n  name: '18',\r\n  children: [\r\n    {\r\n      name: '12',\r\n      children: [\r\n        {name: '8'},\r\n        {name: '15'}\r\n      ]\r\n    },{\r\n      name: '45',\r\n      children: [\r\n        {name: '28'},\r\n        {name: '62'}\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\nexport const arvoreBinariaBuscaComFolha = {\r\n  name: '18',\r\n  children: [\r\n    {\r\n      name: '12',\r\n      children: [\r\n        {name: '8'},\r\n        {name: '15'}\r\n      ]\r\n    },{\r\n      name: '45',\r\n      children: [\r\n        {name: '28', children: [{name:'21'}]},\r\n        {name: '62'}\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\nexport const arvoreBinariaBuscaZigueZague = {\r\n  name: '12',\r\n  children: [\r\n    { name: '\\u00d7', attributes: {fade:true}},\r\n    {\r\n      name: '18',\r\n      children: [\r\n        {\r\n          name: '15',\r\n          children: [\r\n            { name: '\\u00d7', attributes: {fade:true}},\r\n            { name: '16',children: [\r\n              { name: '\\u00d7', attributes: {fade:true}},\r\n              { name: '\\u00d7', attributes: {fade:true}}\r\n            ]}\r\n          ]\r\n        },\r\n        { name: '\\u00d7', attributes: {fade:true}}\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\nexport const arvoreBinariaBuscaDesbalanceada = {\r\n  name: '12',\r\n  children: [\r\n    {\r\n      name: '8',\r\n      children: [\r\n        { name: '\\u00d7', attributes: {fade:true}},\r\n        { name: '\\u00d7', attributes: {fade:true}}\r\n      ]\r\n    },{\r\n      name: '15',\r\n      children: [\r\n        { name: '\\u00d7', attributes: {fade:true}},\r\n        {\r\n          name: '18',\r\n          children: [\r\n            { name: '\\u00d7', attributes: {fade:true}},\r\n            {\r\n              name: '45',\r\n              children: [\r\n                {name: '28',children: [\r\n                  { name: '\\u00d7', attributes: {fade:true}},\r\n                  { name: '\\u00d7', attributes: {fade:true}}\r\n                ]},\r\n                {name: '62',children: [\r\n                  { name: '\\u00d7', attributes: {fade:true}},\r\n                  { name: '\\u00d7', attributes: {fade:true}}\r\n                ]}\r\n              ]\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\nexport const arvoreEstritamenteBinaria = {\r\n  name: 'A',\r\n  children: [\r\n    {\r\n      name: 'B',\r\n    },{\r\n      name: 'C',\r\n      children: [\r\n        {name: 'F'},\r\n        {\r\n          name: 'G',\r\n          children: [{name: 'H'}, {name: 'I'}]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\nexport const arvoreBinariaCompleta = {\r\n  name: 'A',\r\n  children: [\r\n    {\r\n      name: 'B',\r\n      children: [\r\n        {name: 'D'}, \r\n        {name: 'E', children: [{name: 'H'}]}\r\n      ]\r\n    },{\r\n      name: 'C',\r\n      children: [\r\n        {name: 'F', children: [{name: 'I'}]},\r\n        {\r\n          name: 'G',\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}","import '../../../App.css';\r\nimport SlideInicial from '../../../ImdCommons/SlideInicial';\r\nimport { Box, List, makeStyles, Typography } from '@material-ui/core';\r\nimport { themeBaseStyles } from '../../../styles';\r\nimport ImdSlideDuvidas from '../../../ImdCommons/ImdSlideDuvidas';\r\nimport { useEffect } from 'react';\r\nimport SlideAgenda, { Topico } from '../../../ImdCommons/SlideAgenda';\r\nimport ImdSlide from '../../../ImdCommons/ImdSlide';\r\nimport { BuscaBinaria } from './BuscaBinaria';\r\nimport { ArvoreBinariaDefinicao, ArvoresBuscaBinaria, ArvoresConceitos, ArvoresDefinicao } from './Arvores';\r\nimport Math from '../../../ImdCommons/Math';\r\nimport { arvoreBinaria, arvoreBinariaCompleta, arvoreEstritamenteBinaria } from '../../../data/arvoreBinaria';\r\n\r\nconst useStyles = makeStyles((theme, props) => (themeBaseStyles(theme, props)));\r\n\r\nexport function SlidesAula07EDB2(props) {\r\n  const classes = useStyles(props);\r\n\r\n  useEffect(() => {\r\n    document.title = \"EDB2 - Aula 07 - Conceitos de Árvores\"\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SlideInicial\r\n        codigoDisciplina=\"IMD0039\"\r\n        nomeDisciplina=\"Estruturas de Dados Básicas 2\"\r\n        assunto=\"Árvores\"\r\n        semestre=\"2020.2\"\r\n        />\r\n      <SlideAgenda>\r\n        <Topico>Conceito de árvore</Topico>\r\n        <Topico>Limite inferior de um problema</Topico>\r\n        <Topico>Árvore de decisão</Topico>\r\n        <Topico>Algoritmo ótimo</Topico>\r\n      </SlideAgenda>\r\n      <ImdSlide heading=\"Busca Binária\">\r\n        <BuscaBinaria/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores\">\r\n        <ArvoresBuscaBinaria buscaBinaria={true}/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores: Definição\">\r\n        <ArvoresDefinicao/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores: Conceitos\">\r\n        <ArvoresConceitos/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores: Raiz\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria raiz={true}/>\r\n          <Typography className={classes.topicoS2}>A árvore é referenciada à partir de sua raiz, chamada de <span className={classes.emphasis}>r</span>.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores: Subárvore\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria subarvore={true}/>\r\n          <Typography className={classes.topicoS2}>Uma <span className={classes.emphasis}>subárvore de T</span> cuja raiz é um nó <span className={classes.emphasis}>v</span> é chamada de <span className={classes.emphasis}>T<sub>v</sub></span>.</Typography>\r\n          <Typography className={classes.topicoS2}>Se E pertence a T<sub>B</sub>, então E é <span className={classes.emphasis}>descendente</span> de B e B é <span className={classes.emphasis}>ancestral</span> de E.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores: Subárvore\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria subarvore2={true}/>\r\n          <Typography className={classes.topicoS2}>Mesmo os nós que não possuem descendentes também são raízes de uma subárvore.</Typography>\r\n          <Typography className={classes.topicoS2}><span className={classes.emphasis}>E é raiz da subárvore T<sub>E</sub>.</span></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores: Folhas\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria folhas={true}/>\r\n          <Typography className={classes.topicoS2}>Os nós que não possuem descendentes são chamados de <span className={classes.emphasis}>folhas</span>.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores: Caminhos\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria caminhos={true}/>\r\n          <Typography className={classes.topicoS2}>A ligação entre dois nós de uma árvore é chamada de <span className={classes.emphasis}>arco</span> ou <span className={classes.emphasis}>aresta</span>.</Typography>\r\n          <Typography className={classes.topicoS2} style={{textAlign: 'center'}}>O <span className={classes.emphasis}>caminho</span> de um nó A até um nó F é o conjunto de arestas que devem ser percorridas para chegar de A a F.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores: Altura\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria altura={true}/>\r\n          <Typography className={classes.topicoS2}>A altura <span className={classes.emphasis}>h</span> de um nó é maior distância entre ele e uma folha.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores: Nível\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria nivel={true}/>\r\n          <Typography className={classes.topicoS2}>O nível de um nó é maior distância entre ele e a raiz.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores: Grau de um nó\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria grau={true}/>\r\n          <Typography className={classes.topicoS2}>O <span className={classes.emphasis}>grau</span> de um nó é dado pelo número de filhos de um nó.</Typography>\r\n          <Typography className={classes.topicoS2}>Um nó com <Math tex={String.raw`grau > 0`}/> é chamado de <span className={classes.emphasis}>nó interior</span>.</Typography>\r\n          <Typography className={classes.topicoS2}><span className={classes.danger}>E um nó com <Math tex={String.raw`grau = 0`}/>?</span></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores: Grau de uma árvore (Aridade)\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria grauArvore={true}/>\r\n          <Typography className={classes.topicoS2}>Uma <span className={classes.emphasis}>árvore m-ária</span> é uma árvore cujos nós têm <Math tex={String.raw`grau <= m`}/>.</Typography>\r\n          <Typography className={classes.topicoS2}>T<sub>B</sub> é uma subárvore <span className={classes.emphasis}>binária</span>.</Typography>\r\n          <Typography className={classes.topicoS2}><span className={classes.danger}>Qual a aridade de T?</span></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores: Relações\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria relacoes={true}/>\r\n          <Box display=\"flex\"\r\n              className={classes.root}\r\n              flexDirection=\"row\"\r\n              alignItems=\"center\"\r\n              justifyContent=\"space-evenly\">\r\n            <Box display=\"flex\"\r\n                className={classes.root}\r\n                flexDirection=\"column\"\r\n                alignItems=\"left\"\r\n                justifyContent=\"space-evenly\">\r\n              <Typography className={classes.topicoS1}>A é a <span className={classes.emphasis}>raiz</span> da árvore.</Typography>\r\n              <Typography className={classes.topicoS1}>A é <span className={classes.emphasis}>pai</span> de B, C e D.</Typography>\r\n              <Typography className={classes.topicoS1}>A é <span className={classes.emphasis}>avô</span> de E, F e G.</Typography>\r\n              <Typography className={classes.topicoS1}>B é <span className={classes.emphasis}>raiz da subárvore</span> <Math tex={String.raw`T_B`}/>.</Typography>\r\n              <Typography className={classes.topicoS1}>B é <span className={classes.emphasis}>filho</span> de A.</Typography>\r\n              <Typography className={classes.topicoS1}>B é <span className={classes.emphasis}>irmão</span> de C e D.</Typography>\r\n            </Box>\r\n            <Box display=\"flex\"\r\n                className={classes.root}\r\n                flexDirection=\"column\"\r\n                alignItems=\"left\"\r\n                justifyContent=\"space-evenly\">\r\n              <Typography className={classes.topicoS1}>B é <span className={classes.emphasis}>pai</span> de E, F e G.</Typography>\r\n              <Typography className={classes.topicoS1}>E, F, G e D são <span className={classes.emphasis}>folhas</span>.</Typography>\r\n              <Typography className={classes.topicoS1}>E é <span className={classes.emphasis}>raiz da subárvore</span> <Math tex={String.raw`T_E`}/>.</Typography>\r\n              <Typography className={classes.topicoS1}>E é <span className={classes.emphasis}>filho</span> de B.</Typography>\r\n              <Typography className={classes.topicoS1}>E é <span className={classes.emphasis}>neto</span> de A.</Typography>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores: Exercícios\">\r\n        <List component=\"ol\" className={classes.numbersOl}>\r\n          <Topico><span style={{fontSize: '0.8em'}}>Implementar uma árvore com as operações de buscar, adicionar, excluir e print.</span></Topico>\r\n          <Topico><span style={{fontSize: '0.8em'}}>Ao buscar um nó, retornar o nível em que o nó se encontra. Se ele não existir na árvore, retorne -1.</span></Topico>\r\n          <Topico><span style={{fontSize: '0.8em'}}>Ao adicionar um nó, deve ser informado o seu valor e o valor do nó pai dele.</span></Topico>\r\n          <Topico><span style={{fontSize: '0.8em'}}>Ao excluir um nó, escolha aleatoriamente um de seus filhos para ser a raiz da subárvore.</span></Topico>\r\n          <Topico><span style={{fontSize: '0.8em'}}>O método print deve atender à seguinte relação de recorrência: <span style={{fontSize: '0.8em'}}><Math tex={String.raw`\r\n              print(no) \\begin{cases}\r\n                \\varnothing &\\text{, se o nó é uma subárvore vazia} \\\\\r\n                (no.valor\\text{ }(print(no.filhos[0]),\\text{ }print(no.filhos[1]),\\text{ }...,\\text{ }print(no.filhos[m]))) &\\text{, para todo nó m-ário}\r\n            \\end{cases}`}/></span></span></Topico>\r\n        </List> \r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Binária: Definição\">\r\n        <ArvoreBinariaDefinicao/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Binária\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvore={arvoreBinaria}/>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Estritamente Binária\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvore={arvoreEstritamenteBinaria} estritamenteBinaria={true}/>\r\n          <Typography className={classes.topicoS2}>Todos os nós possuem <span className={classes.emphasis}><Math tex={String.raw`grau == 0`}/></span> ou <span className={classes.emphasis}><Math tex={String.raw`grau == 2`}/></span>.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Binária Completa\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvore={arvoreBinariaCompleta} binariaCompleta={true}/>\r\n          <Typography className={classes.topicoS2}>Se um nó possui <span className={classes.emphasis}><Math tex={String.raw`grau < 2`}/></span>, então ele está no <span className={classes.emphasis}>último ou penúltimo nível</span> de T.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Binária Cheia\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvore={arvoreBinaria} binariaCompleta={true}/>\r\n          <Typography className={classes.topicoS2}>Se um nó possui <span className={classes.emphasis}><Math tex={String.raw`grau < 2`}/></span>, então ele está no <span className={classes.emphasis}>último nível</span> de T.</Typography>\r\n          <Typography className={classes.topicoS2}><span className={classes.danger}>Esta árvore é estritamente binária? Ela é completa?</span></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlideDuvidas/>\r\n      <ImdSlide heading=\"Referências\">\r\n        <Box className={classes.slideContentColumnBox}>\r\n          <List component=\"ul\" className={classes.numbersOl}>\r\n            <Topico>SZWARCFITER, Jayme Luiz; MARKENZON, Lilian. Estruturas de dados e seus algoritmos. 3. ed. Rio de Janeiro: LTC, 2010.</Topico>\r\n          </List>\r\n        </Box>\r\n      </ImdSlide>\r\n    </>\r\n  );\r\n}\r\n","export const buscaPreOrdem = `Visita a raiz\r\nPercorre a subárvore da esquerda em pré-ordem\r\nPercorre a subárvore da direita em pré-ordem`;\r\nexport const buscaOrdemSimetrica = `Percorre a subárvore da esquerda em ordem simétrica\r\nVisita a raiz\r\nPercorre a subárvore da direita em ordem simétrica`;\r\nexport const buscaPosOrdem = `Percorre a subárvore da esquerda em pós-ordem\r\nPercorre a subárvore da direita em pós-ordem\r\nVisita a raiz`;","import '../../../App.css';\r\nimport SlideInicial from '../../../ImdCommons/SlideInicial';\r\nimport { Box, List, makeStyles, Typography } from '@material-ui/core';\r\nimport { themeBaseStyles } from '../../../styles';\r\nimport ImdSlideDuvidas from '../../../ImdCommons/ImdSlideDuvidas';\r\nimport { useEffect } from 'react';\r\nimport SlideAgenda, { Topico } from '../../../ImdCommons/SlideAgenda';\r\nimport ImdSlide from '../../../ImdCommons/ImdSlide';\r\nimport { BuscaBinaria } from '../aula-07/BuscaBinaria';\r\nimport { ArvoreBinariaDefinicao, ArvoresBuscaBinaria } from '../aula-07/Arvores';\r\nimport Math from '../../../ImdCommons/Math';\r\nimport { arvoreBinaria, arvoreBinariaCompleta, arvoreEstritamenteBinaria } from '../../../data/arvoreBinaria';\r\nimport ImdCodePane from '../../../ImdCommons/ImdCodePane';\r\nimport { buscaOrdemSimetrica, buscaPreOrdem, buscaPosOrdem } from '../../../codes/percursos_arvore_binaria';\r\n\r\nconst useStyles = makeStyles((theme, props) => (themeBaseStyles(theme, props)));\r\n\r\nexport function SlidesAula08EDB2(props) {\r\n  const classes = useStyles(props);\r\n\r\n  useEffect(() => {\r\n    document.title = \"EDB2 - Aula 08 - Árvores Binárias\"\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SlideInicial\r\n        codigoDisciplina=\"IMD0039\"\r\n        nomeDisciplina=\"Estruturas de Dados Básicas 2\"\r\n        assunto=\"Árvores Binárias\"\r\n        semestre=\"2020.2\"\r\n        />\r\n      <SlideAgenda>\r\n        <Topico>Árvore binária</Topico>\r\n        <Topico>Propriedades de uma árvore binária</Topico>\r\n        <Topico>Tipos de árvores binárias</Topico>\r\n        <Topico>Percursos em árvores binárias</Topico>\r\n      </SlideAgenda>\r\n      <ImdSlide heading=\"Busca Binária\">\r\n        <BuscaBinaria/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores\">\r\n        <ArvoresBuscaBinaria buscaBinaria={true}/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Binária: Definição\">\r\n        <ArvoreBinariaDefinicao/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Binária\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvore={arvoreBinaria}/>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Binária: Subárvores vazias\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvoreBinariaSubarvoresVazias={true}/>\r\n          <Typography className={classes.topicoS2}>O número de <span className={classes.emphasis}>subárvores</span> vazias de uma árvore binária com <Math tex={String.raw`n`}/> elementos é <span className={classes.emphasis}>sempre igual a <Math tex={String.raw`n+1`}/></span>.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Binária: Subárvores vazias\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvoreBinariaSubarvoresVazias2={true}/>\r\n          <Typography className={classes.topicoS2}>Com <span className={classes.emphasis}><Math tex={String.raw`n=6`}/></span>, o número de subárvores vazias é <span className={classes.emphasis}><Math tex={String.raw`7`}/></span>.</Typography>\r\n          <Typography className={classes.topicoS2}>E se removermos um nó?</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Binária: Subárvores vazias\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvoreBinariaSubarvoresVazias3={true}/>\r\n          <Typography className={classes.topicoS2}>Com <span className={classes.emphasis}><Math tex={String.raw`n=5`}/></span>, o número de subárvores vazias é <span className={classes.emphasis}><Math tex={String.raw`6`}/></span>.</Typography>\r\n          <Typography className={classes.topicoS2}><Math tex={String.raw`n = n-1`}/> e <Math tex={String.raw`T = n-1+2 = n-1`}/></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Estritamente Binária\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvore={arvoreEstritamenteBinaria} estritamenteBinaria={true}/>\r\n          <Typography className={classes.topicoS2}>Todos os nós possuem <span className={classes.emphasis}><Math tex={String.raw`grau == 0`}/></span> ou <span className={classes.emphasis}><Math tex={String.raw`grau == 2`}/></span>.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Binária Completa\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvore={arvoreBinariaCompleta} binariaCompleta={true}/>\r\n          <Typography className={classes.topicoS2}>Se um nó possui <span className={classes.emphasis}><Math tex={String.raw`grau < 2`}/></span>, então ele está no <span className={classes.emphasis}>último ou penúltimo nível</span> de T.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Binária Cheia\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvore={arvoreBinaria} binariaCompleta={true}/>\r\n          <Typography className={classes.topicoS2}>Se um nó possui <span className={classes.emphasis}><Math tex={String.raw`grau < 2`}/></span>, então ele está no <span className={classes.emphasis}>último nível</span> de T.</Typography>\r\n          <Typography className={classes.topicoS2}><span className={classes.danger}>Esta árvore é estritamente binária? Ela é completa?</span></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Binária Ziguezague\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvoreZiguezague={true}/>\r\n          <Typography className={classes.topicoS2}><span className={classes.emphasis}><Math tex={String.raw`h(T) = n`}/></span></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Binária Cheia: Altura\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvore={arvoreBinaria} binariaCompleta={true}/>\r\n          <Typography className={classes.topicoS2}><span className={classes.danger}><Math tex={String.raw`h(T) = ?`}/></span></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Binária Cheia: Altura\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvore={arvoreBinaria} binariaCompleta={true}/>\r\n          <Typography className={classes.topicoS2}><span className={classes.emphasis}><Math tex={String.raw`h(T) = 1 + \\lfloor \\log_2{n} \\rfloor`}/></span></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Binária: Altura mínima e máxima\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Altura mínima: <span className={classes.emphasis}><Math tex={String.raw`h(T) = 1 + \\lfloor \\log_2{n} \\rfloor`}/></span></Typography>\r\n          <Typography className={classes.topicoS2}>Altura máxima: <span className={classes.emphasis}><Math tex={String.raw`h(T) = n`}/></span></Typography>\r\n          <Typography className={classes.topicoS2}><span className={classes.emphasis}><Math tex={String.raw`2^{h-1} \\leq n \\leq 2^h - 1`}/></span></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Percurso em Árvore Binária\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Por <span className={classes.emphasis}>percurso</span> entende-se uma visita sistemática a cada um dos nós de uma árvore.</Typography>\r\n          <Typography className={classes.topicoS2}>Percurso em <span className={classes.emphasis}>pré-ordem</span>.</Typography>\r\n          <Typography className={classes.topicoS2}>Percurso em <span className={classes.emphasis}>ordem simétrica</span>.</Typography>\r\n          <Typography className={classes.topicoS2}>Percurso em <span className={classes.emphasis}>pós-ordem</span>.</Typography>\r\n          <Typography className={classes.topicoS2}>Percurso em <span className={classes.emphasis}>nível</span>.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Percurso em pré-ordem\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ImdCodePane language=\"java\">\r\n            {buscaPreOrdem}\r\n          </ImdCodePane>\r\n          <ArvoresBuscaBinaria arvore={arvoreBinaria} withCode={true}/>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Percurso em pré-ordem\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ImdCodePane language=\"java\">\r\n            {buscaPreOrdem}\r\n          </ImdCodePane>\r\n          <ArvoresBuscaBinaria arvore={arvoreBinaria} withCode={true}/>\r\n          <Typography className={classes.topicoS2}><span className={classes.emphasis}>Ordem de percurso:</span> A, B, D, E, C, F, G</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Percurso em ordem simétrica\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ImdCodePane language=\"java\">\r\n            {buscaOrdemSimetrica}\r\n          </ImdCodePane>\r\n          <ArvoresBuscaBinaria arvore={arvoreBinaria} withCode={true}/>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Percurso em ordem simétrica\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ImdCodePane language=\"java\">\r\n            {buscaOrdemSimetrica}\r\n          </ImdCodePane>\r\n          <ArvoresBuscaBinaria arvore={arvoreBinaria} withCode={true}/>\r\n          <Typography className={classes.topicoS2}><span className={classes.emphasis}>Ordem de percurso:</span> D, B, E, A, F, C, G</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Percurso em pós-ordem\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ImdCodePane language=\"java\">\r\n            {buscaPosOrdem}\r\n          </ImdCodePane>\r\n          <ArvoresBuscaBinaria arvore={arvoreBinaria} withCode={true}/>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Percurso em pós-ordem\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ImdCodePane language=\"java\">\r\n            {buscaPosOrdem}\r\n          </ImdCodePane>\r\n          <ArvoresBuscaBinaria arvore={arvoreBinaria} withCode={true}/>\r\n          <Typography className={classes.topicoS2}><span className={classes.emphasis}>Ordem de percurso:</span> D, E, B, F, G, C, A</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Percurso em nível\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvore={arvoreBinaria} nivel={true}/>\r\n          <Typography className={classes.topicoS2}><span className={classes.emphasis}>Ordem de percurso:</span> A, B, C, D, E, F, G</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Exercício\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Modificar a árvore implementada na aula passada para que ela seja binária.</Typography>\r\n          <Typography className={classes.topicoS2}>Implementar os métodos de busca utilizando os percursos em <span className={classes.emphasis}>pré-ordem</span>, <span className={classes.emphasis}>ordem simétrica</span>, <span className={classes.emphasis}>pós-ordem</span> e em <span className={classes.emphasis}>nível</span>.</Typography>\r\n          <Typography className={classes.topicoS2}>Implementar os métodos de impressão dos elementos da árvore em <span className={classes.emphasis}>pré-ordem</span>, <span className={classes.emphasis}>ordem simétrica</span>, <span className={classes.emphasis}>pós-ordem</span> e em <span className={classes.emphasis}>nível</span>.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlideDuvidas/>\r\n      <ImdSlide heading=\"Referências\">\r\n        <Box className={classes.slideContentColumnBox}>\r\n          <List component=\"ul\" className={classes.numbersOl}>\r\n            <Topico>SZWARCFITER, Jayme Luiz; MARKENZON, Lilian. Estruturas de dados e seus algoritmos. 3. ed. Rio de Janeiro: LTC, 2010.</Topico>\r\n          </List>\r\n        </Box>\r\n      </ImdSlide>\r\n    </>\r\n  );\r\n}\r\n","import '../../../App.css';\r\nimport SlideInicial from '../../../ImdCommons/SlideInicial';\r\nimport { Box, List, makeStyles, Typography } from '@material-ui/core';\r\nimport { themeBaseStyles } from '../../../styles';\r\nimport ImdSlideDuvidas from '../../../ImdCommons/ImdSlideDuvidas';\r\nimport { useEffect } from 'react';\r\nimport SlideAgenda, { Topico } from '../../../ImdCommons/SlideAgenda';\r\nimport ImdSlide from '../../../ImdCommons/ImdSlide';\r\nimport { BuscaBinaria } from '../aula-07/BuscaBinaria';\r\nimport { ArvoreBinariaDefinicao, ArvoresBuscaBinaria } from '../aula-07/Arvores';\r\nimport Math from '../../../ImdCommons/Math';\r\nimport { arvoreBinaria, arvoreBinariaBusca, arvoreBinariaBuscaDesbalanceada, arvoreBinariaBuscaZigueZague, arvoreBinariaBuscaComFolha } from '../../../data/arvoreBinaria';\r\nimport { ImdVector } from '../../../ImdCommons/ImdVector';\r\n\r\nconst useStyles = makeStyles((theme, props) => (themeBaseStyles(theme, props)));\r\n\r\nexport function SlidesAula09EDB2(props) {\r\n  const classes = useStyles(props);\r\n  const orderedVector = [{value: 8}, {value: 12}, {value: 15}, {value: 18}, {value: 28}, {value: 45}, {value: 62}];\r\n\r\n  useEffect(() => {\r\n    document.title = \"EDB2 - Aula 09 - Árvores Binárias de Busca\"\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SlideInicial\r\n        codigoDisciplina=\"IMD0039\"\r\n        nomeDisciplina=\"Estruturas de Dados Básicas 2\"\r\n        assunto=\"Árvores Binárias de Busca\"\r\n        semestre=\"2020.2\"\r\n        />\r\n      <SlideAgenda>\r\n        <Topico>Árvore Binária de Busca</Topico>\r\n        <Topico>Operações e complexidades</Topico>\r\n        <Topico>Caminhos</Topico>\r\n        <Topico>Árvores Balanceadas</Topico>\r\n      </SlideAgenda>\r\n      <ImdSlide heading=\"Árvore Binária de Busca\">\r\n        <ArvoresBuscaBinaria buscaBinaria={true}/>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Binária: Definição\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>É uma <span className={classes.emphasis}>árvore binária</span> tal que:</Typography>\r\n          <Typography className={classes.topicoS2}>A raiz possui uma chave</Typography>\r\n          <Typography className={classes.topicoS2}>As chaves dos nós da subárvore <span className={classes.emphasis}>esquerda</span> da raiz são <span className={classes.emphasis}>menores</span> que a chave da raiz</Typography>\r\n          <Typography className={classes.topicoS2}>As chaves dos nós da subárvore <span className={classes.emphasis}>direita</span> da raiz são <span className={classes.emphasis}>maiores</span> que a chave da raiz</Typography>\r\n          <Typography className={classes.topicoS2}>As subárvores esquerda e direita são árvores binárias de busca</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Binária de Busca: Exemplo\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvore={arvoreBinaria}/>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Binária de Busca: Operações\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Busca</Typography>\r\n          <Typography className={classes.topicoS2}>Inserção</Typography>\r\n          <Typography className={classes.topicoS2}>Remoção</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Binária de Busca: Busca\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Dada uma <span className={classes.emphasis}>coleção</span> de elementos previamente <span className={classes.emphasis}>ordenada</span></Typography>\r\n          <Typography className={classes.topicoS2}><span className={classes.emphasis}>Encontrar</span> o elemento que contenha uma dada <span className={classes.emphasis}>chave</span></Typography>\r\n          <Typography className={classes.topicoS3}><span className={classes.danger}>Qual algoritmo devemos utilizar?</span></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Binária de Busca: Busca\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ImdVector\r\n            data={orderedVector}\r\n            height={100}  />\r\n          \r\n          <Typography className={classes.topicoS3}><span className={classes.emphasis}>Busca Binária</span></Typography>\r\n          <Typography className={classes.topicoS2}><span className={classes.danger}>Qual a complexidade?</span></Typography>\r\n          <Typography className={classes.topicoS2}><span className={classes.danger}>Como transformamos esta coleção de elementos em uma árvore?</span></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      \r\n      <ImdSlide heading=\"Árvore Binária de Busca: Busca\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ImdVector\r\n            data={orderedVector}\r\n            height={100}  />\r\n          <ArvoresBuscaBinaria arvore={arvoreBinariaBusca}/>\r\n          <Typography className={classes.topicoS2}><span className={classes.danger}>Qual a complexidade?</span></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      \r\n      <ImdSlide heading=\"Árvore Binária de Busca: Busca\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvore={arvoreBinariaBuscaDesbalanceada} zoom={0.65}/>\r\n          <Typography className={classes.topicoS2}><span className={classes.danger}>Também é uma árvore binária de busca?</span></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      \r\n      <ImdSlide heading=\"Árvore Binária de Busca: Busca\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"row\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvore={arvoreBinariaBuscaZigueZague} zoom={0.65}/>\r\n          <Typography className={classes.topicoS2}><span className={classes.danger}>Qual a complexidade?</span></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      \r\n      <ImdSlide heading=\"Árvore Binária de Busca: Busca\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvore={arvoreBinariaBusca}/>\r\n          <Typography className={classes.topicoS2}>Se a árvore binária de busca for <span className={classes.emphasis}>completa</span>, a complexidade da busca é <span className={classes.emphasis}><Math tex={String.raw`O(\\log{n})`}/></span></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      \r\n      <ImdSlide heading=\"Árvore Binária de Busca: Inserção\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvore={arvoreBinariaBusca}/>\r\n          <Typography className={classes.topicoS2}><span className={classes.danger}>Qual o caminho para inserir o elemento 21 e manter as condições da árvore binária de busca?</span></Typography>\r\n          <Typography className={classes.topicoS2}><span className={classes.danger}>Qual a complexidade?</span></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      \r\n      <ImdSlide heading=\"Árvore Binária de Busca: Inserção\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvore={arvoreBinariaBuscaComFolha} zoom={0.75}/>\r\n        </Box>\r\n      </ImdSlide>\r\n      \r\n      <ImdSlide heading=\"Exercício\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Alterar o método de inserção na nossa árvore para que ela sempre seja uma árvore binária de busca.</Typography>\r\n          <Typography className={classes.topicoS2}>O que acontece se inserirmos o vetor [{orderedVector.map(el => el.value).join(\",\")}] iterando sobre ele?</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      \r\n      <ImdSlide heading=\"Árvore Binária de Busca: Remoção\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvore={arvoreBinariaBuscaComFolha} zoom={0.75}/>\r\n          <Typography className={classes.topicoS2}><span className={classes.danger}>Qual o algoritmo para remover o elemento 8?</span></Typography>\r\n          <Typography className={classes.topicoS2}><span className={classes.danger}>Qual a complexidade?</span></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      \r\n      <ImdSlide heading=\"Árvore Binária de Busca: Remoção\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvore={arvoreBinariaBuscaComFolha} zoom={0.75}/>\r\n          <Typography className={classes.topicoS2}><span className={classes.danger}>Qual o algoritmo para remover o elemento 28?</span></Typography>\r\n          <Typography className={classes.topicoS2}><span className={classes.danger}>Qual a complexidade?</span></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      \r\n      <ImdSlide heading=\"Árvore Binária de Busca: Remoção\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvore={arvoreBinariaBuscaComFolha} zoom={0.75}/>\r\n          <Typography className={classes.topicoS2}><span className={classes.danger}>Qual o algoritmo para remover o elemento 18?</span></Typography>\r\n          <Typography className={classes.topicoS2}><span className={classes.danger}>Qual a complexidade?</span></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n\r\n      <ImdSlide heading=\"Exercício\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Alterar o método de remoção da nossa árvore para que ela sempre seja uma árvore binária de busca.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n\r\n      <ImdSlideDuvidas/>\r\n      \r\n      <ImdSlide heading=\"Referências\">\r\n        <Box className={classes.slideContentColumnBox}>\r\n          <List component=\"ul\" className={classes.numbersOl}>\r\n            <Topico>SZWARCFITER, Jayme Luiz; MARKENZON, Lilian. Estruturas de dados e seus algoritmos. 3. ed. Rio de Janeiro: LTC, 2010.</Topico>\r\n          </List>\r\n        </Box>\r\n      </ImdSlide>\r\n    </>\r\n  );\r\n}\r\n","\r\nexport const arvoreHeap = {\r\n  name: '62',\r\n  children: [\r\n    {\r\n      name: '28',\r\n      children: [\r\n        {name: '18', children: [{name:'3'}, {name:'5'}]},\r\n        {name: '15', children: [{name:'1'}]}\r\n      ]\r\n    },{\r\n      name: '45',\r\n      children: [\r\n        {name: '12'},\r\n        {name: '8'}\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\nexport const heapVector = [{value: 62}, {value: 28}, {value: 45}, {value: 18}, {value: 15}, {value: 12}, {value: 8}, {value: 3}, {value: 5}, {value: 1}];\r\nexport const heapVector1 = [{value: 20}, {value: 25}, {value: 32}, {value: 29}, {value: 27}, {value: 35}, {value: 40}, {value: 45}];\r\nexport const heapVector2 = [{value: 20}, {value: 32}, {value: 25}, {value: 29}, {value: 27}, {value: 35}, {value: 40}, {value: 45}];\r\nexport const heapVector3 = [{value: 50}, {value: 45}, {value: 48}, {value: 29}, {value: 15}, {value: 35}, {value: 40}, {value: 27}];","import '../../../App.css';\r\nimport SlideInicial from '../../../ImdCommons/SlideInicial';\r\nimport { Box, List, makeStyles, Typography } from '@material-ui/core';\r\nimport { themeBaseStyles } from '../../../styles';\r\nimport ImdSlideDuvidas from '../../../ImdCommons/ImdSlideDuvidas';\r\nimport { useEffect } from 'react';\r\nimport SlideAgenda, { Topico } from '../../../ImdCommons/SlideAgenda';\r\nimport ImdSlide from '../../../ImdCommons/ImdSlide';\r\nimport { ArvoresBuscaBinaria } from '../aula-07/Arvores';\r\nimport Math from '../../../ImdCommons/Math';\r\nimport { arvoreHeap, heapVector, heapVector1, heapVector2, heapVector3 } from '../../../data/arvoreHeap';\r\nimport { ImdVector } from '../../../ImdCommons/ImdVector';\r\nimport { CodePane } from 'spectacle';\r\nimport ImdCodePane from '../../../ImdCommons/ImdCodePane';\r\n\r\nconst useStyles = makeStyles((theme, props) => (themeBaseStyles(theme, props)));\r\n\r\nexport function SlidesAula10EDB2(props) {\r\n  const classes = useStyles(props);\r\n  const orderedVector = [{value: 8}, {value: 12}, {value: 15}, {value: 18}, {value: 28}, {value: 45}, {value: 62}];\r\n\r\n  useEffect(() => {\r\n    document.title = \"EDB2 - Aula 10 - Heap e heapsort\"\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SlideInicial\r\n        codigoDisciplina=\"IMD0039\"\r\n        nomeDisciplina=\"Estruturas de Dados Básicas 2\"\r\n        assunto=\"Heap e heapsort\"\r\n        semestre=\"2020.2\"\r\n        />\r\n      <SlideAgenda>\r\n        <Topico>Lista de prioridades</Topico>\r\n        <Topico>Heap</Topico>\r\n        <Topico>Heapsort</Topico>\r\n      </SlideAgenda>\r\n      <ImdSlide heading=\"Lista de prioridades e heap\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Uma <span className={classes.emphasis}>lista de prioridade</span> é uma estrutura que permite obter facilmente o menor ou o maior elemento da lista.</Typography>\r\n          <Typography className={classes.topicoS2}>A <span className={classes.emphasis}>heap</span> é um vetor que pode se representado como uma árvore.</Typography>\r\n          <Typography className={classes.topicoS2}>Nas <span className={classes.emphasis}>heaps de máximo</span> (ou max heaps), a raiz de cada subárvore é sempre <span className={classes.emphasis}>maior</span> que os nós das subárvores filhas.</Typography>\r\n          <Typography className={classes.topicoS2}>Nas <span className={classes.emphasis}>heaps de mínimo</span> (ou min heaps), a raiz de cada subárvore é sempre <span className={classes.emphasis}>menor</span> que os nós das subárvores filhas.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Heap: representações\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ImdVector\r\n            data={heapVector}\r\n            height={100}  />\r\n          <ArvoresBuscaBinaria arvore={arvoreHeap} zoom={0.75}/>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Heap: Exercício\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Verificar se é heap:</Typography>\r\n          <ImdVector\r\n            data={heapVector1}\r\n            height={100}  />\r\n          <ImdVector\r\n            data={heapVector2}\r\n            height={100}  />\r\n          <ImdVector\r\n            data={heapVector3}\r\n            height={100}  />\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Heap: índices\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <ImdVector\r\n            data={heapVector}\r\n            height={100}  />\r\n          <Typography className={classes.topicoS2}><Math tex={String.raw`\\left\\lfloor i/2 \\right\\rfloor`}/> é o índice do pai.</Typography>\r\n          <Typography className={classes.topicoS2}><Math tex={String.raw`2 \\cdot i`}/> é o índice do filho esquerdo.</Typography>\r\n          <Typography className={classes.topicoS2}><Math tex={String.raw`2 \\cdot i + 1`}/> é o índice do filho direito.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Heap: definições\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Uma heap é sempre uma <span className={classes.emphasis}>Árvore Binária Completa</span>.</Typography>\r\n          <ImdVector\r\n            data={heapVector}\r\n            height={100}  />\r\n          <ArvoresBuscaBinaria arvore={arvoreHeap} zoom={0.75}/>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Heap: operações\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Selecionar o elemento com maior (ou menor) prioridade.</Typography>\r\n          <Typography className={classes.topicoS2}>Inserir um novo elemento.</Typography>\r\n          <Typography className={classes.topicoS2}>Remover o elemento de maior (ou menor) prioridade.</Typography>\r\n          <Typography className={classes.topicoS2}>Alterar a prioridade de um elemento.</Typography>\r\n          <Typography className={classes.topicoS2}>Construir heap</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      \r\n      <ImdSlideDuvidas/>\r\n      \r\n      <ImdSlide heading=\"Referências\">\r\n        <Box className={classes.slideContentColumnBox}>\r\n          <List component=\"ul\" className={classes.numbersOl}>\r\n            <Topico>SZWARCFITER, Jayme Luiz; MARKENZON, Lilian. Estruturas de dados e seus algoritmos. 3. ed. Rio de Janeiro: LTC, 2010.</Topico>\r\n          </List>\r\n        </Box>\r\n      </ImdSlide>\r\n    </>\r\n  );\r\n}\r\n","import '../../../App.css';\r\nimport SlideInicial from '../../../ImdCommons/SlideInicial';\r\nimport { Box, List, makeStyles, Typography } from '@material-ui/core';\r\nimport { themeBaseStyles } from '../../../styles';\r\nimport ImdSlideDuvidas from '../../../ImdCommons/ImdSlideDuvidas';\r\nimport { useEffect } from 'react';\r\nimport SlideAgenda, { Topico } from '../../../ImdCommons/SlideAgenda';\r\nimport ImdSlide from '../../../ImdCommons/ImdSlide';\r\nimport { ArvoresBuscaBinaria } from '../aula-07/Arvores';\r\nimport Math from '../../../ImdCommons/Math';\r\nimport { arvoreHeap, heapVector, heapVector1, heapVector2, heapVector3 } from '../../../data/arvoreHeap';\r\nimport { ImdVector } from '../../../ImdCommons/ImdVector';\r\n\r\nconst useStyles = makeStyles((theme, props) => (themeBaseStyles(theme, props)));\r\n\r\nexport function SlidesAula11EDB2(props) {\r\n  const classes = useStyles(props);\r\n  const orderedVector = [{value: 8}, {value: 12}, {value: 15}, {value: 18}, {value: 28}, {value: 45}, {value: 62}];\r\n\r\n  useEffect(() => {\r\n    document.title = \"EDB2 - Aula 11 - Conjuntos Disjuntos\"\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SlideInicial\r\n        codigoDisciplina=\"IMD0039\"\r\n        nomeDisciplina=\"Estruturas de Dados Básicas 2\"\r\n        assunto=\"Conjuntos Disjuntos\"\r\n        semestre=\"2020.2\"\r\n        />\r\n      <SlideAgenda>\r\n        <Topico>Conjuntos Disjuntos</Topico>\r\n        <Topico>Operações</Topico>\r\n        <Topico>Complexidade</Topico>\r\n      </SlideAgenda>\r\n      <ImdSlide heading=\"Conjuntos disjuntos\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Elementos que pertencem a um domínio com <span className={classes.emphasis}>n</span> elementos.</Typography>\r\n          <Typography className={classes.topicoS2}>Vamos desenhar.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Conjuntos disjuntos: operações\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}><span className={classes.emphasis}>gerar(n)</span> cria um conjuto com um único elemento para cada elemento <span className={classes.emphasis}>x</span> do universo.</Typography>\r\n          <Typography className={classes.topicoS2}><span className={classes.emphasis}>buscar(x)</span> obtém o nome do conjunto ao qual o elemento <span className={classes.emphasis}>x</span> pertence.</Typography>\r\n          <Typography className={classes.topicoS2}><span className={classes.emphasis}>fundir(x, y)</span> realiza a união entre os conjuntos <span className={classes.emphasis}>x e y</span>.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Conjuntos disjuntos: gerar\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Vamos desenhar.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Conjuntos disjuntos: fundir\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Vamos desenhar.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Conjuntos disjuntos: buscar\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Vamos desenhar.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Conjuntos disjuntos: fusão por tamanho\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>A fusão ocorre sempre do nó com menor altura diretamente na raiz do nó com maior altura.</Typography>\r\n          <Typography className={classes.topicoS2}>O resultado da fusão de duas árvores de alturas distintas terá a altura da árvore com maior altura.</Typography>\r\n          <Typography className={classes.topicoS2}>O resultado da fusão de duas árvores de alturas iguais terá a altura das árvores + 1.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Conjuntos disjuntos: fundir\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}><span className={classes.danger}>Sem</span> fusão por tamanho</Typography>\r\n          <Typography className={classes.topicoS2}>fundir(1,2); fundir(7,8);</Typography>\r\n          <Typography className={classes.topicoS2}>fundir(6,7); fundir(5,6);</Typography>\r\n          <Typography className={classes.topicoS2}>fundir(4,5); fundir(3,4);</Typography>\r\n          <Typography className={classes.topicoS2}>fundir(1,3);</Typography>\r\n          <Typography className={classes.topicoS2}>Vamos desenhar.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Conjuntos disjuntos: fundir\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}><span className={classes.danger}>Com</span> fusão por tamanho</Typography>\r\n          <Typography className={classes.topicoS2}>fundir(1,2); fundir(7,8);</Typography>\r\n          <Typography className={classes.topicoS2}>fundir(6,7); fundir(5,6);</Typography>\r\n          <Typography className={classes.topicoS2}>fundir(4,5); fundir(3,4);</Typography>\r\n          <Typography className={classes.topicoS2}>fundir(1,3);</Typography>\r\n          <Typography className={classes.topicoS2}>Vamos desenhar.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Conjuntos disjuntos: compressão de caminhos\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Vamos desenhar.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Conjuntos disjuntos: complexidade\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}><span className={classes.emphasis}>m</span> operações gerar, fundir e buscar.</Typography>\r\n          <Typography className={classes.topicoS2}><span className={classes.emphasis}>n</span> operações gerar.</Typography>\r\n          <Typography className={classes.topicoS2}><span className={classes.emphasis}><Math tex={String.raw`O(m\\alpha(n))`}/></span> operações gerar.</Typography>\r\n          <Typography className={classes.topicoS2}><span className={classes.emphasis}><Math tex={String.raw`\\alpha( )`}/></span> é a função inversa da função de Ackerman.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Conjuntos disjuntos: complexidade\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>\r\n            <Math tex={String.raw`A(i,j) = \\begin{cases}\r\n                  2 \\cdot j & i == j \\\\\r\n                  2 & j == 1 \\\\\r\n                  A(i-1, A(i, j - 1)) & \\text{caso contrário}\r\n                \\end{cases}`}/>\r\n          </Typography>\r\n          <Typography className={classes.topicoS2}><Math tex={String.raw`A(1,1) = 2`}/></Typography>\r\n          <Typography className={classes.topicoS2}><Math tex={String.raw`A(1,j+1) = A(0, A(1,j)) = 2A(1,j) \\text{para j >= 1}`}/></Typography>\r\n          <Typography className={classes.topicoS2}><Math tex={String.raw`A(1,j) = 2^j \\text{para todo j}`}/></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Conjuntos disjuntos: complexidade\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}><Math tex={String.raw`A(2,1) = 2`}/></Typography>\r\n          <Typography className={classes.topicoS2}><Math tex={String.raw`A(2,j+1) = A(1, A(2,j)) = 2^{A(2,j)} \\text{para j >= 1}`}/></Typography>\r\n          <Typography className={classes.topicoS2}><Math tex={String.raw`A(2,1) = 2`}/></Typography>\r\n          <Typography className={classes.topicoS2}><Math tex={String.raw`A(2,2) = 4`}/></Typography>\r\n          <Typography className={classes.topicoS2}><Math tex={String.raw`A(2,3) = 16`}/></Typography>\r\n          <Typography className={classes.topicoS2}><Math tex={String.raw`A(2,4) = 65536`}/></Typography>\r\n          <Typography className={classes.topicoS2}><Math tex={String.raw`A(2,j) = 2^{2^{.^{.^{.^{2}}}}}`}/></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      \r\n      <ImdSlideDuvidas/>\r\n      \r\n      <ImdSlide heading=\"Referências\">\r\n        <Box className={classes.slideContentColumnBox}>\r\n          <List component=\"ul\" className={classes.numbersOl}>\r\n            <Topico>SZWARCFITER, Jayme Luiz; MARKENZON, Lilian. Estruturas de dados e seus algoritmos. 3. ed. Rio de Janeiro: LTC, 2010.</Topico>\r\n          </List>\r\n        </Box>\r\n      </ImdSlide>\r\n    </>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/avl.4aa173c9.PNG\";","export default __webpack_public_path__ + \"static/media/avlSimplesDireita.bac0c878.PNG\";","export default __webpack_public_path__ + \"static/media/avlDuplaDireita.86feefb0.PNG\";","export default __webpack_public_path__ + \"static/media/avlSimplesEsquerda.2ad201a8.PNG\";","export default __webpack_public_path__ + \"static/media/avlDuplaEsquerda.5d46d9e4.PNG\";","import '../../../App.css';\r\nimport SlideInicial from '../../../ImdCommons/SlideInicial';\r\nimport { Box, List, makeStyles, Typography } from '@material-ui/core';\r\nimport { themeBaseStyles } from '../../../styles';\r\nimport ImdSlideDuvidas from '../../../ImdCommons/ImdSlideDuvidas';\r\nimport { useEffect } from 'react';\r\nimport SlideAgenda, { Topico } from '../../../ImdCommons/SlideAgenda';\r\nimport ImdSlide from '../../../ImdCommons/ImdSlide';\r\nimport arvoresAvl from '../../../img/avl.PNG';\r\nimport avlSimplesDireita from '../../../img/avlSimplesDireita.PNG';\r\nimport avlDuplaDireita from '../../../img/avlDuplaDireita.PNG';\r\nimport avlSimplesEsquerda from '../../../img/avlSimplesEsquerda.PNG';\r\nimport avlDuplaEsquerda from '../../../img/avlDuplaEsquerda.PNG';\r\nimport Math from '../../../ImdCommons/Math';\r\n\r\nconst useStyles = makeStyles((theme, props) => (themeBaseStyles(theme, props)));\r\n\r\nexport function SlidesAula12EDB2(props) {\r\n  const classes = useStyles(props);\r\n  const orderedVector = [{value: 8}, {value: 12}, {value: 15}, {value: 18}, {value: 28}, {value: 45}, {value: 62}];\r\n\r\n  useEffect(() => {\r\n    document.title = \"EDB2 - Aula 12 - Árvore AVL\"\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SlideInicial\r\n        codigoDisciplina=\"IMD0039\"\r\n        nomeDisciplina=\"Estruturas de Dados Básicas 2\"\r\n        assunto=\"Árvores AVL\"\r\n        semestre=\"2020.2\"\r\n        />\r\n      <SlideAgenda>\r\n        <Topico>Árvore AVL</Topico>\r\n        <Topico>Rotações</Topico>\r\n        <Topico>Demonstração</Topico>\r\n      </SlideAgenda>\r\n      <ImdSlide heading=\"Árvores AVL\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Uma árvore binária T é denominada AVL quando, para qualquer nó de T, as alturas de suas duas subárvores, esquerda e direita, diferem em módulo de até uma unidade. Nesse caso, v é um nó regulado.</Typography>\r\n          <Typography className={classes.topicoS2}>Em contrapartida, um nó que não satisfaça essa condição de altura é denominado desregulado, e uma árvore que contenha um nó nessas condições é também chamada desregulada.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores AVL: exemplo\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <img src={arvoresAvl} alt=\"Árvore AVL e não AVL\"/>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores AVL: rotações\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Rotação simples à direita.</Typography>\r\n          <Typography className={classes.topicoS2}>Rotação simples à esquerda.</Typography>\r\n          <Typography className={classes.topicoS2}>Rotação dupla à direita.</Typography>\r\n          <Typography className={classes.topicoS2}>Rotação dupla à esquerda.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores AVL: rotação simples à direita\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <img src={avlSimplesDireita} alt=\"Árvore AVL: rotação simples à direita\"/>\r\n          <Typography className={classes.topicoS2}><Math tex={String.raw`h_E(p) > h_D(p)\\:\\&\\&\\:h_E(u) > h_D(u)`}/></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores AVL: rotação dupla à direita\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <img src={avlDuplaDireita} alt=\"Árvore AVL: rotação dupla à direita\"/>\r\n          <Typography className={classes.topicoS2}><Math tex={String.raw`h_E(p) > h_D(p)\\:\\&\\&\\:h_E(u) < h_D(u)`}/></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores AVL: rotação simples à esquerda\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <img src={avlSimplesEsquerda} alt=\"Árvore AVL: rotação simples à esquerda\"/>\r\n          <Typography className={classes.topicoS2}><Math tex={String.raw`h_E(p) < h_D(p)\\:\\&\\&\\:h_E(u) < h_D(u)`}/></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores AVL: rotação dupla à esquerda\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <img src={avlDuplaEsquerda} alt=\"Árvore AVL: rotação dupla à esquerda\"/>\r\n          <Typography className={classes.topicoS2}><Math tex={String.raw`h_E(p) < h_D(p)\\:\\&\\&\\:h_E(u) > h_D(u)`}/></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores AVL: demonstração\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}><a href=\"https://www.inf.ufsc.br/~aldo.vw/estruturas/simulador/AVL.html\" target=\"_blank\" rel=\"noreferrer\">https://www.inf.ufsc.br/~aldo.vw/estruturas/simulador/AVL.html</a></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      \r\n      <ImdSlideDuvidas/>\r\n      \r\n      <ImdSlide heading=\"Referências\">\r\n        <Box className={classes.slideContentColumnBox}>\r\n          <List component=\"ul\" className={classes.numbersOl}>\r\n            <Topico>SZWARCFITER, Jayme Luiz; MARKENZON, Lilian. Estruturas de dados e seus algoritmos. 3. ed. Rio de Janeiro: LTC, 2010.</Topico>\r\n          </List>\r\n        </Box>\r\n      </ImdSlide>\r\n    </>\r\n  );\r\n}\r\n","const nilNode = { name: '\\u00d7', attributes: {empty:true, color: 'black'}};\r\n\r\nconst leaf = (value, color) => {\r\n  return {\r\n    name: value,\r\n    attributes: { color },\r\n    children: [\r\n      nilNode, nilNode\r\n    ]\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const arvoreGraduada = {\r\n  name: '40',\r\n  children: [\r\n    {\r\n      name: '30',\r\n      children: [\r\n        leaf('18'),\r\n        nilNode \r\n      ]\r\n    },{\r\n      name: '50',\r\n      children: [\r\n        leaf('45'),\r\n        {\r\n          name: '60',\r\n          children: [\r\n            nilNode,\r\n            leaf('80')\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n};\r\n\r\nexport const arvoreRubroNegra = {\r\n  name: '8',\r\n  attributes: {color: 'black'},\r\n  children: [\r\n    leaf('5', 'black'),\r\n    {\r\n      name: '15',\r\n      attributes: {color: 'red'},\r\n      children: [\r\n        {\r\n          name: '12',\r\n          attributes: {color: 'black'},\r\n          children: [\r\n            leaf('9', 'red'),\r\n            leaf('13', 'red')\r\n          ]\r\n        },\r\n        {\r\n          name: '19',\r\n          attributes: {color: 'black'},\r\n          children: [\r\n            nilNode,\r\n            leaf('23', 'red')\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n\r\nexport const arvoreRubroNegraSemCor = {\r\n  name: '8',\r\n  children: [\r\n    leaf('5'),\r\n    {\r\n      name: '15',\r\n      children: [\r\n        {\r\n          name: '12',\r\n          children: [\r\n            leaf('9'),\r\n            leaf('13')\r\n          ]\r\n        },\r\n        {\r\n          name: '19',\r\n          children: [\r\n            nilNode,\r\n            leaf('23')\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}","export default __webpack_public_path__ + \"static/media/rnSimplesDireita.ce181779.PNG\";","export default __webpack_public_path__ + \"static/media/rnDuplaDireita.1f50fee6.PNG\";","export default __webpack_public_path__ + \"static/media/rnSimplesEsquerda.dd4e0a4d.PNG\";","export default __webpack_public_path__ + \"static/media/rnDuplaEsquerda.a8e56735.PNG\";","export default __webpack_public_path__ + \"static/media/rnDefinicoes.7265dbb6.PNG\";","export default __webpack_public_path__ + \"static/media/rnDefinicoesCenario2.fc3c014a.png\";","export default __webpack_public_path__ + \"static/media/rnDefinicoesTriangulo.e7aea361.PNG\";","import '../../../App.css';\r\nimport SlideInicial from '../../../ImdCommons/SlideInicial';\r\nimport { Box, List, makeStyles, Typography } from '@material-ui/core';\r\nimport { themeBaseStyles } from '../../../styles';\r\nimport ImdSlideDuvidas from '../../../ImdCommons/ImdSlideDuvidas';\r\nimport { useEffect } from 'react';\r\nimport SlideAgenda, { Topico } from '../../../ImdCommons/SlideAgenda';\r\nimport ImdSlide from '../../../ImdCommons/ImdSlide';\r\nimport Math from '../../../ImdCommons/Math';\r\nimport { ArvoresBuscaBinaria } from '../aula-07/Arvores';\r\nimport { arvoreGraduada, arvoreRubroNegra, arvoreRubroNegraSemCor } from '../../../data/arvoreRubroNegra';\r\nimport rnSimplesDireita from '../../../img/rnSimplesDireita.PNG';\r\nimport rnDuplaDireita from '../../../img/rnDuplaDireita.PNG';\r\nimport rnSimplesEsquerda from '../../../img/rnSimplesEsquerda.PNG';\r\nimport rnDuplaEsquerda from '../../../img/rnDuplaEsquerda.PNG';\r\nimport rnDefinicoes from '../../../img/rnDefinicoes.PNG';\r\nimport rnDefinicoesCenario2 from '../../../img/rnDefinicoesCenario2.png';\r\nimport rnDefinicoesTriangulo from '../../../img/rnDefinicoesTriangulo.PNG';\r\n\r\nconst useStyles = makeStyles((theme, props) => (themeBaseStyles(theme, props)));\r\n\r\nexport function SlidesAula14EDB2(props) {\r\n  const classes = useStyles(props);\r\n\r\n  useEffect(() => {\r\n    document.title = \"EDB2 - Aula 13 - Árvores B (B-Tree) e digitais (Tries)\"\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SlideInicial\r\n        codigoDisciplina=\"IMD0039\"\r\n        nomeDisciplina=\"Estruturas de Dados Básicas 2\"\r\n        assunto=\"Árvores B (B-Tree) e digitais (Tries)\"\r\n        semestre=\"2020.2\"\r\n        />\r\n      <SlideAgenda>\r\n        <Topico>Árvores B (B-Tree)</Topico>\r\n        <Topico>Árvores Digitais</Topico>\r\n        <Topico>Implementação de árvore digital</Topico>\r\n      </SlideAgenda>\r\n      <ImdSlide heading=\"Árvore B (B-Tree)\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Mais de uma chave é armazenada em cada nó.</Typography>\r\n          <Typography className={classes.topicoS2}>Assegura que todas as suas folhas estejam no último nível da árvore.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore B (B-Tree): ordem\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Diz-se que uma árvore B é de <span className={classes.emphasis}>ordem <Math tex={String.raw`d`}/></span> se ela é vazia ou satisfaz as condições:</Typography>\r\n          <Typography className={classes.topicoS2}>(i) A raiz é uma folha ou tem pelo menos dois filhos.</Typography>\r\n          <Typography className={classes.topicoS2}>(ii) Cada nó diferente das folhas e da raiz tem pelo menos <Math tex={String.raw`d + 1`}/> filhos.</Typography>\r\n          <Typography className={classes.topicoS2}>(iii) Cada nó tem no máximo <Math tex={String.raw`2d + 1`}/> filhos.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore B (B-Tree): página\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Um nó de uma árvore B é chamado de PÁGINA e apresenta as seguintes propriedades:</Typography>\r\n          <Typography className={classes.topicoS2}>(i) Seja <Math tex={String.raw`m`}/> o número de chaves em uma página P não folha, então P possui <Math tex={String.raw`m + 1`}/> filhos.</Typography>\r\n          <Typography className={classes.topicoS2}>(ii) Cada página possui entre <Math tex={String.raw`d`}/> e <Math tex={String.raw`2d`}/> chaves, exceto o nó raiz que possui entre <Math tex={String.raw`1`}/> e <Math tex={String.raw`2d`}/> chaves.</Typography>\r\n          <Typography className={classes.topicoS2}>(iii) As chaves de cada página estão ordenadas e <Math tex={String.raw`d \\leqslant m \\leqslant 2d`}/>. Para a raiz, <Math tex={String.raw`1 \\leqslant m \\leqslant 2d`}/>.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore B (B-Tree): exemplo\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Adicionar os nós 9, 30, 60, 80 no link abaixo:</Typography>\r\n          <Typography className={classes.topicoS2}><a href=\"https://www.cs.usfca.edu/~galles/visualization/BTree.html\" target=\"_blank\" rel=\"noreferrer\">https://www.cs.usfca.edu/~galles/visualization/BTree.html</a></Typography>\r\n          <Typography className={classes.topicoS2}>O que acontece se inserirmos o 70?</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore B (B-Tree): busca\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Semelhante a uma busca em uma árvore binária de busca.</Typography>\r\n          <Typography className={classes.topicoS2}>Os filhos são sempre maiores que o nó esquerdo do pai e menores que o nó direito do pai.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore B (B-Tree): inserção\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Encontra o nó folha onde o novo elemento deve ser inserido.</Typography>\r\n          <Typography className={classes.topicoS2}>Insere o novo elemento.</Typography>\r\n          <Typography className={classes.topicoS2}>Caso o nó passe a ter mais chaves do que o limite, divide o nó em dois e coloca o elemento do meio no nó pai.</Typography>\r\n          <Typography className={classes.topicoS2}>Este procedimento pode se repetir até que seja necessário dividir a raiz e com isso aumentar a altura da árvore.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore B (B-Tree): remoção\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Encontra o nó a ser removido.</Typography>\r\n          <Typography className={classes.topicoS2}>Susbtitui ele pelo seu maior nó de sua sub-árvore esquerda ou pelo menor nó de sua sub-árvore direita.</Typography>\r\n          <Typography className={classes.topicoS2}>Remove o elemento de seu nó.</Typography>\r\n          <Typography className={classes.topicoS2}>Caso alguma regra seja violada, pode ocorrer a fusão de dois nós.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore B (B-Tree): complexidades\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Busca: <Math tex={String.raw`O(\\log{n})`}/></Typography>\r\n          <Typography className={classes.topicoS2}>Inserção: <Math tex={String.raw`O(\\log{n})`}/></Typography>\r\n          <Typography className={classes.topicoS2}>Remoção: <Math tex={String.raw`O(\\log{n})`}/></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores digitais (Tries)\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Considere um alfabeto formado por dígitos <Math tex={String.raw`d_1, ... d_n`}/>.</Typography>\r\n          <Typography className={classes.topicoS2}>Cada chave é formada por uma sequência de dígitos.</Typography>\r\n          <Typography className={classes.topicoS2}>A chave não é considerada atômica.</Typography>\r\n          <Typography className={classes.topicoS2}>A busca é feita dígito a dígito.</Typography>\r\n          <Typography className={classes.topicoS2}>O nó final da chave armazena o seu valor.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores digitais (Tries): definição\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Uma árvore digital para S é uma árvore m-ária T, não vazia, tal que:</Typography>\r\n          <Typography className={classes.topicoS2}>(i) Seja v um nó de T, o j-ésimo filho de seu pai, então v corresponde ao dígito dj do alfabeto de S, <Math tex={String.raw`1 \\leqslant j \\leqslant m`}/>.</Typography>\r\n          <Typography className={classes.topicoS2}>(ii) Para cada nó v, a sequência de dígitos definida pelo caminho desde a raiz de T a v corresponde a um prefixo de alguma chave de S.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores digitais (Tries): busca\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Navega na árvore dígito a dígito da chave.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores digitais (Tries): inserção\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Navega na árvore dígito a dígito da chave.</Typography>\r\n          <Typography className={classes.topicoS2}>Caso o nó não exista, ele é criado.</Typography>\r\n          <Typography className={classes.topicoS2}>O valor da chave é atribuído a último nó dela.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores digitais (Tries): remoção\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Navega na árvore dígito a dígito da chave.</Typography>\r\n          <Typography className={classes.topicoS2}>Caso encontre valor para a chave, remove o valor.</Typography>\r\n          <Typography className={classes.topicoS2}>Se o nó não tive filhos, remove todos os nós à partir de um nó pai que contenha valor.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores digitais (Tries): exemplo\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}><a href=\"https://www.cs.usfca.edu/~galles/visualization/Trie.html\" target=\"_blank\" rel=\"noreferrer\">https://www.cs.usfca.edu/~galles/visualization/Trie.html</a></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      \r\n      <ImdSlideDuvidas/>\r\n      \r\n      <ImdSlide heading=\"Referências\">\r\n        <Box className={classes.slideContentColumnBox}>\r\n          <List component=\"ul\" className={classes.numbersOl}>\r\n            <Topico>SZWARCFITER, Jayme Luiz; MARKENZON, Lilian. Estruturas de dados e seus algoritmos. 3. ed. Rio de Janeiro: LTC, 2010.</Topico>\r\n          </List>\r\n        </Box>\r\n      </ImdSlide>\r\n    </>\r\n  );\r\n}\r\n","import '../../../App.css';\r\nimport SlideInicial from '../../../ImdCommons/SlideInicial';\r\nimport { Box, List, makeStyles, Typography } from '@material-ui/core';\r\nimport { themeBaseStyles } from '../../../styles';\r\nimport ImdSlideDuvidas from '../../../ImdCommons/ImdSlideDuvidas';\r\nimport { useEffect } from 'react';\r\nimport SlideAgenda, { Topico } from '../../../ImdCommons/SlideAgenda';\r\nimport ImdSlide from '../../../ImdCommons/ImdSlide';\r\nimport Math from '../../../ImdCommons/Math';\r\nimport { ArvoresBuscaBinaria } from '../aula-07/Arvores';\r\nimport { arvoreGraduada, arvoreRubroNegra, arvoreRubroNegraSemCor } from '../../../data/arvoreRubroNegra';\r\nimport rnSimplesDireita from '../../../img/rnSimplesDireita.PNG';\r\nimport rnDuplaDireita from '../../../img/rnDuplaDireita.PNG';\r\nimport rnSimplesEsquerda from '../../../img/rnSimplesEsquerda.PNG';\r\nimport rnDuplaEsquerda from '../../../img/rnDuplaEsquerda.PNG';\r\nimport rnDefinicoes from '../../../img/rnDefinicoes.PNG';\r\nimport rnDefinicoesCenario2 from '../../../img/rnDefinicoesCenario2.png';\r\nimport rnDefinicoesTriangulo from '../../../img/rnDefinicoesTriangulo.PNG';\r\n\r\nconst useStyles = makeStyles((theme, props) => (themeBaseStyles(theme, props)));\r\n\r\nexport function SlidesAula13EDB2(props) {\r\n  const classes = useStyles(props);\r\n\r\n  useEffect(() => {\r\n    document.title = \"EDB2 - Aula 13 - Árvore Rubro-Negra\"\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <SlideInicial\r\n        codigoDisciplina=\"IMD0039\"\r\n        nomeDisciplina=\"Estruturas de Dados Básicas 2\"\r\n        assunto=\"Árvore Rubro-Negra\"\r\n        semestre=\"2020.2\"\r\n        />\r\n      <SlideAgenda>\r\n        <Topico>Árvores Graduadas</Topico>\r\n        <Topico>Árvores Rubro-Negras</Topico>\r\n        <Topico>Operações em Árvores Rubro-Negras</Topico>\r\n      </SlideAgenda>\r\n      <ImdSlide heading=\"Árvore Graduadas\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Uma <span className={classes.emphasis}>árvore graduada</span> é uma árvore binária de busca.</Typography>\r\n          <Typography className={classes.topicoS2}>Para cada nó v da árvore, existe um número inteiro chamado de <span className={classes.emphasis}>posto(v)</span>.</Typography>\r\n          <Typography className={classes.topicoS2}>Se v é um nó externo, então <Math tex={String.raw`posto(v) = 0`}/>.</Typography>\r\n          <Typography className={classes.topicoS2}>Se v é pai de um nó externo, então <Math tex={String.raw`posto(v) = 1`}/>.</Typography>\r\n          <Typography className={classes.topicoS2}>Se v possui pai w, então <Math tex={String.raw`posto(v) \\leqslant posto(w) \\leqslant posto(v) +  1`}/>.</Typography>\r\n          <Typography className={classes.topicoS2}>Se v possui avô w, então <Math tex={String.raw`posto(v) < posto(w)`}/>.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Graduadas: exemplo\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <ArvoresBuscaBinaria arvore={arvoreGraduada} zoom={0.6}/>\r\n          <Typography className={classes.topicoS2}>Esta árvore é AVL?</Typography>\r\n          <Typography className={classes.topicoS2}>Esta árvore é graduada?</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Rubro-Negra\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Um nó pode ser <span className={classes.emphasis}>vermelho</span> ou <span className={classes.emphasis}>preto</span>.</Typography>\r\n          <Typography className={classes.topicoS2}>A <span className={classes.emphasis}>raiz e as folhas vazias</span> são nós <span className={classes.emphasis}>pretos</span>.</Typography>\r\n          <Typography className={classes.topicoS2}>Se um nó é <span className={classes.emphasis}>vermelho</span>, então os seus filhos <span className={classes.emphasis}>são pretos</span>.</Typography>\r\n          <Typography className={classes.topicoS2}>Todos os caminhos à partir de um nó até os seus descendentes que são folhas vazias possuem o <span className={classes.emphasis}>mesmo número de nós pretos</span>.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Rubro-Negra: exemplo\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          \r\n          <ArvoresBuscaBinaria arvore={arvoreRubroNegraSemCor} zoom={0.75}/>\r\n          <Typography className={classes.topicoS2}>Esta árvore é Rubro-Negra?</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Graduada → Rubro-Negra\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>O nó raiz é sempre preto.</Typography>\r\n          <Typography className={classes.topicoS2}>Se v possui pai w, e <Math tex={String.raw`posto(v) == posto(w)`}/>, então v é vermelho.</Typography>\r\n          <Typography className={classes.topicoS2}>Senão, v é preto.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Graduada → Rubro-Negra\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          \r\n          <ArvoresBuscaBinaria arvore={arvoreRubroNegraSemCor} zoom={0.75}/>\r\n          <Typography className={classes.topicoS2}>Esta árvore é Rubro-Negra?</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvore Rubro-Negra: exemplo\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          \r\n          <ArvoresBuscaBinaria arvore={arvoreRubroNegra} zoom={0.75}/>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Rubro-Negra → Graduada\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Se o nó v é externo, então <Math tex={String.raw`posto(v) = 0`}/>.</Typography>\r\n          <Typography className={classes.topicoS2}>Se v possui pai w e v é vermelho, então <Math tex={String.raw`posto(w) = posto(v)`}/>.</Typography>\r\n          <Typography className={classes.topicoS2}>Se v possui pai w e v é preto, então <Math tex={String.raw`posto(w) = posto(v) + 1`}/>.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Rubro-Negra → Graduada\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          \r\n          <ArvoresBuscaBinaria arvore={arvoreRubroNegra} zoom={0.75}/>\r\n        </Box>\r\n      </ImdSlide>\r\n      \r\n      <ImdSlide heading=\"Propriedades\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>O posto de um nó em uma Árvore Rubro-Negra é a quantidade de nós pretos entre ele e um nó externo.</Typography>\r\n          <Typography className={classes.topicoS2}>A altura h de um nó v em uma Árvore Graduada é tal que <Math tex={String.raw`h(v) \\leqslant 2 \\cdot posto(v)`}/>.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores Rubro-Negras: operações\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Busca.</Typography>\r\n          <Typography className={classes.topicoS2}>Inserção.</Typography>\r\n          <Typography className={classes.topicoS2}>Remoção.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores Rubro-Negras: inserção\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"left\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>1. Realiza a busca da posição onde o nó deve ser inserido.</Typography>\r\n          <Typography className={classes.topicoS2}>2. Marca o nó como vermelho.</Typography>\r\n          <Typography className={classes.topicoS2}>3. Verifica a necessidade de rotação ou mudança de cor do nó.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores Rubro-Negras: definições\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <img src={rnDefinicoes} alt=\"Árvore Rubro-Negras: definições\"/>\r\n          <Typography className={classes.topicoS2}><span className={classes.emphasis}>q</span> é o nó inserido; <span className={classes.emphasis}>v</span> é o pai de q; <span className={classes.emphasis}>w</span> é o avô de q; <span className={classes.emphasis}>t</span> é o tio de q.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      {/* q = Z, v = A, w = B, t = D */}\r\n      <ImdSlide heading=\"Árvores Rubro-Negras: cenários\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>1. <span className={classes.emphasis}>q</span> é a raiz.</Typography>\r\n          <Typography className={classes.topicoS2}>2. <span className={classes.emphasis}>t</span> é o tio de q e é vermelho.</Typography>\r\n          <Typography className={classes.topicoS2}>3. <span className={classes.emphasis}>t</span> é o tio de q e é preto e eles formam um triângulo.</Typography>\r\n          <Typography className={classes.topicoS2}>4. <span className={classes.emphasis}>t</span> é o tio de q e é preto e eles formam uma linha.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores Rubro-Negras: cenário 1\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>1. <span className={classes.emphasis}>q</span> é a raiz.</Typography>\r\n          <Typography className={classes.topicoS2}>Solução: trocar a cor de q.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores Rubro-Negras: cenário 2\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>2. <span className={classes.emphasis}>t</span> é o tio de q e é vermelho.</Typography>\r\n          <img src={rnDefinicoesCenario2} alt=\"Árvore Rubro-Negras: cenário 2\"/>\r\n          <Typography className={classes.topicoS2}>Solução: trocar as cores do pai de q (v), do avô de q (w) e do tio de q (t).</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores Rubro-Negras: cenário 3\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>3. <span className={classes.emphasis}>t</span> é o tio de q e é preto e eles formam um triângulo.</Typography>\r\n          <img src={rnDefinicoesTriangulo} alt=\"Árvore Rubro-Negras: cenário 3\"/>\r\n          <Typography className={classes.topicoS2}>Solução: rotaciona q para a posição de v para que forme uma linha.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores Rubro-Negras: cenário 4\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>4. <span className={classes.emphasis}>t</span> é o tio de q e é preto e eles formam uma linha.</Typography>\r\n          <img src={rnDefinicoes} alt=\"Árvore Rubro-Negras: cenário 4\"/>\r\n          <Typography className={classes.topicoS2}>Solução: rotaciona v para a posição de w e troca as cores de v e w.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores Rubro-Negras: rotações\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}>Rotação simples à direita.</Typography>\r\n          <Typography className={classes.topicoS2}>Rotação simples à esquerda.</Typography>\r\n          <Typography className={classes.topicoS2}>Rotação dupla à direita.</Typography>\r\n          <Typography className={classes.topicoS2}>Rotação dupla à esquerda.</Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores Rubro-Negras: rotação simples à direita\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <img src={rnSimplesDireita} alt=\"Árvore Rubro-Negras: rotação simples à direita\"/>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores Rubro-Negras: rotação dupla à direita\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <img src={rnDuplaDireita} alt=\"Árvore Rubro-Negras: rotação dupla à direita\"/>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores Rubro-Negras: rotação simples à esquerda\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <img src={rnSimplesEsquerda} alt=\"Árvore Rubro-Negras: rotação simples à esquerda\"/>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores Rubro-Negras: rotação dupla à esquerda\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <img src={rnDuplaEsquerda} alt=\"Árvore Rubro-Negras: rotação dupla à esquerda\"/>\r\n        </Box>\r\n      </ImdSlide>\r\n      <ImdSlide heading=\"Árvores Rubro-Negras: demonstração\">\r\n        <Box display=\"flex\"\r\n            className={classes.root}\r\n            flexDirection=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"space-evenly\">\r\n          <Typography className={classes.topicoS2}><a href=\"https://www.inf.ufsc.br/~aldo.vw/estruturas/simulador/RB.html\" target=\"_blank\" rel=\"noreferrer\">https://www.inf.ufsc.br/~aldo.vw/estruturas/simulador/RB.html</a></Typography>\r\n        </Box>\r\n      </ImdSlide>\r\n      \r\n      <ImdSlideDuvidas/>\r\n      \r\n      <ImdSlide heading=\"Referências\">\r\n        <Box className={classes.slideContentColumnBox}>\r\n          <List component=\"ul\" className={classes.numbersOl}>\r\n            <Topico>SZWARCFITER, Jayme Luiz; MARKENZON, Lilian. Estruturas de dados e seus algoritmos. 3. ed. Rio de Janeiro: LTC, 2010.</Topico>\r\n          </List>\r\n        </Box>\r\n      </ImdSlide>\r\n    </>\r\n  );\r\n}\r\n","import './App.css';\nimport { Box, Deck, FlexBox, FullScreen, Progress } from 'spectacle';\nimport { createMuiTheme, List, makeStyles, ThemeProvider } from '@material-ui/core';\nimport MathJax from '@innodoc/react-mathjax-node';\nimport { HashRouter as Router, Link, Route } from 'react-router-dom';\nimport SlidesAula05EDB2 from './Conteudo/edb2/aula-05/SlidesAula05EDB2';\nimport SlidesAula06EDB2 from './Conteudo/edb2/aula-06/SlidesAula06EDB2';\nimport SlidesAula05LP2 from './Conteudo/lp2/aula-05/SlidesAula05LP2';\nimport { SlidesAula07EDB2 } from './Conteudo/edb2/aula-07/SlidesAula07EDB2';\nimport ImdSlide from './ImdCommons/ImdSlide';\nimport { Topico } from './ImdCommons/SlideAgenda';\nimport { themeBaseStyles } from './styles';\nimport { SlidesAula08EDB2 } from './Conteudo/edb2/aula-08/SlidesAula08EDB2';\nimport { SlidesAula09EDB2 } from './Conteudo/edb2/aula-09-arvores-binarias/SlidesAula09EDB2';\nimport { SlidesAula10EDB2 } from './Conteudo/edb2/aula-10-lista-de-prioridades/SlidesAula10EDB2';\nimport { SlidesAula11EDB2 } from './Conteudo/edb2/aula-11-conjuntos-disjuntos/SlidesAula11EDB2';\nimport { SlidesAula12EDB2 } from './Conteudo/edb2/aula-12-arvore-avl/SlidesAula12EDB2';\nimport { SlidesAula14EDB2 } from './Conteudo/edb2/aula-14-arvore-b-e-digitais/SlidesAula14EDB2';\nimport { SlidesAula13EDB2 } from './Conteudo/edb2/aula-13-arvore-rubro-negra/SlidesAula13EDB2';\n\nconst spectacleTheme = {\n  colors: {\n    primary: '#505050',\n    secondary: 'rgb(37,88,151)',\n    backgroundColor: 'white'\n  },\n  fonts: {\n    header: '\"Source Sans Pro\", Helvetica, sans-serif',\n    text: '\"Source Sans Pro\", Helvetica, sans-serif'\n  }\n};\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: spectacleTheme.colors.primary,\n      light: 'rgb(132,132,132)'\n    },\n    secondary: {\n      main: spectacleTheme.colors.secondary,\n      light: 'rgb(124,154,192)',\n    },\n    highlight: {\n      main: 'rgb(37,151,88)',\n    },\n    emphasis: {\n      main: 'red'\n    },\n    danger: {\n      main: 'red'\n    }\n  },\n  typography: {\n    fontFamily: spectacleTheme.fonts.text\n  },\n});\n\n\n\nconst template = () => (\n  <FlexBox\n    justifyContent=\"space-between\"\n    position=\"absolute\"\n    bottom={0}\n    width={1}\n  >\n    <Box padding=\"0 1em\">\n      <FullScreen />\n    </Box>\n    <Box padding=\"0 1em\">\n      <Progress color={spectacleTheme.colors.primary} />\n    </Box>\n  </FlexBox>\n);\n\n\nconst useStyles = makeStyles((theme, props) => ({\n  ...themeBaseStyles(theme, props)\n}));\n\nconst aulas1 = [{\n  path: \"/edb2/aula-05\",\n  component: () => <SlidesAula05EDB2/>,\n  title: \"Aula 05 - Modelagem e solução de equações de recorrência\"\n},{\n  path: \"/edb2/aula-06\",\n  component: () => <SlidesAula06EDB2/>,\n  title: \"Aula 06 - Complexidade de Algoritmos vs Complexidade de Problemas\"\n}];\n\nconst aulas2 = [{\n  path: \"/edb2/aula-07\",\n  component: () => <SlidesAula07EDB2/>,\n  title: \"Aula 07 - Introdução a Árvores\"\n},{\n  path: \"/edb2/aula-08\",\n  component: () => <SlidesAula08EDB2/>,\n  title: \"Aula 08 - Árvores Binárias\"\n},{\n  path: \"/edb2/aula-09\",\n  component: () => <SlidesAula09EDB2/>,\n  title: \"Aula 09 - Árvores Binárias de Busca\"\n},{\n  path: \"/edb2/aula-10\",\n  component: () => <SlidesAula10EDB2/>,\n  title: \"Aula 10 - Heap e heapsort\"\n},{\n  path: \"/edb2/aula-11\",\n  component: () => <SlidesAula11EDB2/>,\n  title: \"Aula 11 - Conjuntos disjuntos\"\n}];\n\nconst aulas3 = [{\n  path: \"/edb2/aula-12\",\n  component: () => <SlidesAula12EDB2/>,\n  title: \"Aula 12 - Árvore AVL\"\n},{\n  path: \"/edb2/aula-13\",\n  component: () => <SlidesAula13EDB2/>,\n  title: \"Aula 13 - Árvore Rubro-Negra\"\n},{\n  path: \"/edb2/aula-14\",\n  component: () => <SlidesAula14EDB2/>,\n  title: \"Aula 14 - Árvores B e digitais\"\n}];\n\nfunction App(props) {\n  const classes = useStyles(props);\n\n  return (\n    <>\n        <ThemeProvider theme={theme}>\n          <MathJax.ConfigProvider options={{\n            tex: {\n              packages: {'[+]': ['mathtools']}\n            }\n          }}>\n            <Deck theme={spectacleTheme} template={template}>\n              <Router>\n                { aulas1.map(aula => <Route path={aula.path}>{aula.component()}</Route>)}\n                { aulas2.map(aula => <Route path={aula.path}>{aula.component()}</Route>)}\n                { aulas3.map(aula => <Route path={aula.path}>{aula.component()}</Route>)}\n                <Route path=\"/\">\n                  <ImdSlide heading=\"Aulas\">\n                    <List component=\"ul\" className={classes.bullets}>\n                      <Topico>IMD0039 - Estruturas de Dados Básicas 2 - Unidade 1\n                        <List component=\"ol\" className={classes.lowerRomanOl}>\n                          {aulas1.map(aula => <Topico><Link to={aula.path}>{aula.title}</Link></Topico>)}\n                        </List>\n                      </Topico>\n                    </List>\n                  </ImdSlide>\n                  <ImdSlide heading=\"Aulas\">\n                    <List component=\"ul\" className={classes.bullets}>\n                      <Topico>IMD0039 - Estruturas de Dados Básicas 2 - Unidade 2\n                        <List component=\"ol\" className={classes.lowerRomanOl}>\n                          {aulas2.map(aula => <Topico><Link to={aula.path}>{aula.title}</Link></Topico>)}\n                        </List>\n                      </Topico>\n                    </List>\n                  </ImdSlide>\n                  <ImdSlide heading=\"Aulas\">\n                    <List component=\"ul\" className={classes.bullets}>\n                      <Topico>IMD0039 - Estruturas de Dados Básicas 2 - Unidade 3\n                        <List component=\"ol\" className={classes.lowerRomanOl}>\n                          {aulas3.map(aula => <Topico><Link to={aula.path}>{aula.title}</Link></Topico>)}\n                        </List>\n                      </Topico>\n                    </List>\n                  </ImdSlide>\n                  \n                </Route>\n              </Router>\n            </Deck>\n          </MathJax.ConfigProvider>\n        </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}